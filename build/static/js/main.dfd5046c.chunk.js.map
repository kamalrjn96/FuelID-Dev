{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","firebase.js","contexts/AuthContext.js","components/Logo.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","state/Loading.js","components/Page.js","views/auth/LoginView.js","views/dialog/OrderDialog.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/CustomerList.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","views/dialog/UpdateProfileDialog.js","views/dialog/UserSettingsDialog.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","views/auth/RegisterView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Logo","props","Avatar","alt","src","root","toolbar","TopBar","className","rest","classes","AppBar","clsx","elevation","Toolbar","display","overflow","wrapper","flex","paddingTop","contentContainer","content","MainLayout","Loading","userData","setUserData","collection","doc","uid","get","then","data","console","log","err","Page","forwardRef","ref","title","Helmet","paddingBottom","spacing","scrollPaper","alignItems","LoginView","emailRef","useRef","passwordRef","error","setError","setemail","resetEmail","setResetEmail","setpassword","openPasswordReset","setOpenPasswordReset","loadState","e","preventDefault","navigate","alert","catch","code","message","handleClosePasswordReset","changeOnHover","target","style","cursor","Box","flexDirection","justifyContent","Container","maxWidth","Dialog","open","aria-labelledby","aria-describedby","onClose","DialogTitle","DialogContent","container","FormControl","formControl","TextField","fullWidth","label","name","variant","required","onChange","DialogActions","Button","onMouseOver","onClick","color","mb","Typography","severity","noValidate","type","innerRef","my","disabled","size","Grid","item","xs","href","avatar","red","differenceIcon","differenceValue","marginRight","minWidth","selectEmpty","marginTop","OrderDialog","userRef","minQuantity","quant","setQuant","paymentType","remarks","setRemarks","newTag","setnewTag","newAddress","setnewAddress","Date","errors","setErrors","address","userAddress","setUserAddress","displayAddress","setDisplayAddress","random","openNewAddress","setOpenNewAddress","handleCloseNewAddress","direction","justify","displayName","mobileNumber","Select","labelId","id","defaultValue","event","map","MenuItem","key","tag","FormHelperText","Fab","aria-label","autoFocus","Number","price","InputProps","readOnly","placeholder","disableBackdropClick","newAddressArray","uuidv4","length","newUserData","set","userID","orderID","quantity","orderStatus","customerName","created","now","addressValue","OTP","closeOrder","Budget","toISOString","slice","openOrder","setOpenOrder","priceModal","setPriceModal","setPrice","handleCloseOrder","handleClosePriceModal","Card","isCustomer","CardContent","gutterBottom","mt","paddingRight","isOwner","update","parseInt","lastUpdated","actions","LatestOrders","orders","setOrders","row","setRow","anchorEl","setAnchorEl","handleClose","updatedOrders","push","order","deliveredQuantity","delivered","cancelled","columns","field","headerName","renderCell","params","moment","format","Chip","sortable","currentTarget","handleClick","rows","pageSize","Menu","keepMounted","CustomerList","users","setUsers","updatedUsers","uuid","subtract","image","orange","green","bullet","transform","pos","marginBottom","TotalCustomers","validationState","setValidationState","actualQuant","setActualQuant","deliveryCharge","setDeliveryCharge","otp","setOTP","openSuccess","setOpenSuccess","openFailed","setOpenFailed","openCancelRemark","setOpenCancelRemark","cancelRemark","setCancelRemark","setTimeout","handleOpenCancelOrderRemark","handleCloseCancelOrderRemark","handleCancelOrder","cancelledBy","openNotification","userdata","onSubmit","isDriver","AlertTitle","component","orderOTP","notched","finalPrice","handleCompleteOrder","TotalProfit","icon","gridRoot","flexGrow","TrafficByDevice","useTheme","datasets","hoverBorderColor","labels","animation","cutoutPercentage","layout","legend","maintainAspectRatio","responsive","tooltips","bodyFontColor","divider","enabled","footerFontColor","intersect","mode","titleFontColor","devices","MoneyIcon","CreditCardIcon","CardHeader","position","Icon","p","textAlign","ml","minHeight","tab","Dashboard","currentOrderRef","currentPriceRef","allOrderRef","orderHistoryRef","allOrderHistoryRef","setMinQuantity","startingStock","setStartingStock","maxFutureDay","setMaxFutureDay","allOrders","setAllOrders","allUsers","setAllUsers","orderHistory","setOrderHistory","allOrderHistory","setAllOrderHistory","setOpenNotification","setValue","orderPageValue","setOrderPageValue","handleChange","newValue","Alert","TabPanel","role","hidden","where","initialOrders","forEach","fetchData","onSnapshot","userDataList","Df","path","segments","handleOpenNotification","showCurrentOrder","lg","sm","xl","month","toLocaleString","reports","undefined","Paper","Tabs","Tab","paddingLeft","md","report","Snackbar","anchorOrigin","vertical","autoHideDuration","button","fontWeightMedium","textTransform","active","NavItem","ListItem","disableGutters","activeClassName","RouterLink","to","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","mobileDrawer","desktopDrawer","NavBar","onMobileClose","openMobile","useLocation","pathname","Divider","List","Hidden","lgUp","Drawer","anchor","mdDown","defaultProps","UpdateProfileDialog","setInputFields","inputFields","split","firstName","setfirstName","lastName","setlastName","setmobileNumber","handleChangeInput","newInputFields","handleAddFields","RegExp","test","updateProfile","inputField","IconButton","values","filter","handleRemoveFields","UserSettingsDialog","isNaN","prevError","fuelPrice","breakpoints","up","onMobileNavOpen","notifications","openUpdate","setOpenUpdate","drawerState","setDrawerState","toggleDrawer","handleCloseUpdate","ThemeProvider","Badge","badgeContent","footer","grey","DashboardLayout","setMobileNavOpen","snapShot","updateUserData","RegisterView","confirmPassword","setconfirmPassword","cred","replace","App","routes","DashboardView","routing","useRoutes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfd5046c.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const db = app.firestore();\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst Logo = (props) => {\r\n  return <Avatar alt=\"Logo\" src=\"/static/logo.jpg\" {...props} />;\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar, makeStyles } from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Logo />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            {/* <Outlet /> */}\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../firebase';\r\n\r\nconst Loading = () => {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n            console.log(doc.data());\r\n            console.log(userData);\r\n            setLoading(false);\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, [currentUser]);\r\n  return loading && <div>Loading...</div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { A, navigate } from 'hookrouter';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Loading from '../../state/Loading';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  scrollPaper: {\r\n    alignItems: 'baseline'\r\n  }\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  /* const navigate = useNavigate(); */\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n  const { login, resetPassword, currentUser } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setemail] = useState(false);\r\n  const [resetEmail, setResetEmail] = useState(false);\r\n  const [password, setpassword] = useState(false);\r\n  const [openPasswordReset, setOpenPasswordReset] = useState(false);\r\n\r\n  const loadState = () => {\r\n    return <Loading />;\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError('');\r\n\r\n      setLoading(true);\r\n      await login(email, password);\r\n      loadState();\r\n      navigate('/app/dashboard', true);\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleReset() {\r\n    await resetPassword(resetEmail)\r\n      .then(() => {\r\n        window.alert(`Email has been sent to ${resetEmail}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.code, error.message);\r\n        window.alert(`${error.message} Enter Valid e-mail ID`);\r\n      });\r\n    setResetEmail();\r\n    handleClosePasswordReset();\r\n  }\r\n\r\n  const handleClosePasswordReset = () => {\r\n    setOpenPasswordReset(false);\r\n  };\r\n\r\n  const handleOpenPasswordReset = () => {\r\n    setOpenPasswordReset(true);\r\n  };\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!currentUser ? (\r\n        <Page className={classes.root} title=\"Login\">\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            height=\"100%\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Container maxWidth=\"sm\">\r\n              <Dialog\r\n                open={openPasswordReset}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                onClose={handleClosePasswordReset}\r\n                className={classes.scrollPaper}\r\n              >\r\n                <DialogTitle>Enter Email ID to reset Password</DialogTitle>\r\n                <DialogContent>\r\n                  <form\r\n                    className={classes.container} /* onSubmit={handleReset} */\r\n                  >\r\n                    <FormControl className={classes.formControl}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Remarks\"\r\n                        margin=\"normal\"\r\n                        name=\"cancelRemarks\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={(e) => setResetEmail(e.target.value)}\r\n                      />\r\n\r\n                      <DialogActions>\r\n                        <Button\r\n                          onMouseOver={(e) => changeOnHover(e)}\r\n                          onClick={(e) => handleClosePasswordReset()}\r\n                          color=\"primary\"\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          onMouseOver={(e) => changeOnHover(e)}\r\n                          onClick={handleReset}\r\n                          color=\"primary\"\r\n                        >\r\n                          Ok\r\n                        </Button>\r\n                      </DialogActions>\r\n                    </FormControl>\r\n                  </form>\r\n                </DialogContent>\r\n              </Dialog>\r\n              {/* <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required('Password is required')\r\n            })}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form\r\n              /* onSubmit={\r\n                  (handleSubmit,\r\n                  console.log({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values\r\n                  }))\r\n                } \r\n              > */}\r\n              <Box mb={3}>\r\n                <Typography color=\"textPrimary\" variant=\"h2\">\r\n                  Sign in\r\n                </Typography>\r\n              </Box>\r\n              {error && <Alert severity=\"error\">{error}</Alert>}\r\n              <form className=\"form\" noValidate>\r\n                <TextField\r\n                  /*  error={Boolean(touched.email && errors.email)} */\r\n                  fullWidth\r\n                  /* helperText={touched.email && errors.email} */\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  /* onBlur={handleBlur}\r\n                    onChange={handleChange} */\r\n                  type=\"email\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  innerRef={emailRef}\r\n                  onChange={(e) => setemail(e.target.value)}\r\n                />\r\n                <TextField\r\n                  /* error={Boolean(touched.password && errors.password)} */\r\n                  fullWidth\r\n                  /* helperText={touched.password && errors.password} */\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  /* onBlur={handleBlur}\r\n                    onChange={handleChange} */\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  innerRef={passwordRef}\r\n                  onChange={(e) => setpassword(e.target.value)}\r\n                  required\r\n                />\r\n\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                  <Grid container>\r\n                    <Grid item xs>\r\n                      {/* <A href=\"/forgotPassword\" variant=\"body2\">\r\n                        Forgot password?\r\n                      </A> */}\r\n                      <Button onClick={handleOpenPasswordReset}>\r\n                        Forgot password?\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography color=\"textSecondary\" variant=\"body1\">\r\n                        Don&apos;t have an account?{' '}\r\n                        <A href=\"/register\" variant=\"body2\">\r\n                          Sign up\r\n                        </A>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </form>\r\n              {/* </form>\r\n            )}\r\n          </Formik> */}\r\n            </Container>\r\n          </Box>\r\n          {/* <Dialog\r\n            open={openPassword}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            onClose={handleCloseCancelOrderRemark}\r\n          >\r\n            <DialogTitle>Enter Email Address to reset Password</DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                className={classes.container}\r\n                onSubmit={(e) =>\r\n                  handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                }\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Remarks\"\r\n                    margin=\"normal\"\r\n                    name=\"cancelRemarks\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setCancelRemark(e.target.value)}\r\n                  />\r\n\r\n                  <DialogActions>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) => handleCloseCancelOrderRemark()}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) =>\r\n                        handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                      }\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog> */}\r\n        </Page>\r\n      ) : (\r\n        navigate('/app/dashboard', true)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { db } from '../../firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function OrderDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [quant, setQuant] = useState(props.minQuantity);\r\n  const [paymentType, setPaymentType] = useState(1);\r\n  const [remarks, setRemarks] = useState('');\r\n  const [newTag, setnewTag] = useState();\r\n  const [newAddress, setnewAddress] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date('2014-08-18T21:11:54')\r\n  );\r\n  const [errors, setErrors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n\r\n  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  }\r\n\r\n  const [userData, setUserData] = useState(props.userData);\r\n\r\n  const [userAddress, setUserAddress] = useState(\r\n    userData && userData.address ? userData.address : ''\r\n  );\r\n\r\n  const [displayAddress, setDisplayAddress] = useState(\r\n    userData && userData.address ? userData.address[0].value : ''\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    setDisplayAddress(event.target.value);\r\n  };\r\n\r\n  const random = Math.floor(1000 + Math.random() * 9000);\r\n\r\n  const handlePlaceOrder = () => {\r\n    db.collection('orders')\r\n      .doc(`SG-${random}`)\r\n      .set({\r\n        userID: currentUser.uid,\r\n        orderID: `SG-${random}`,\r\n\r\n        quantity: quant,\r\n        price: quant * props.price,\r\n\r\n        paymentType: paymentType,\r\n        orderStatus: 1,\r\n        remarks: remarks,\r\n        customerName: currentUser.displayName,\r\n        mobileNumber: userData.mobileNumber,\r\n        created: Date.now(),\r\n        addressValue: displayAddress,\r\n        OTP: Math.floor(1000 + Math.random() * 9000)\r\n      })\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n        props.closeOrder();\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n  };\r\n\r\n  const [openNewAddress, setOpenNewAddress] = useState(false);\r\n\r\n  const handleClickOpenNewAddress = () => {\r\n    setOpenNewAddress(true);\r\n  };\r\n\r\n  const handleCloseNewAddress = () => {\r\n    setOpenNewAddress(false);\r\n  };\r\n\r\n  const handleAddNewAddress = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newAddressArray;\r\n\r\n    if (userData.address) {\r\n      newAddressArray = [\r\n        ...userData.address,\r\n        {\r\n          id: uuidv4(),\r\n          tag: newTag,\r\n          value: newAddress\r\n        }\r\n      ];\r\n    } else {\r\n      newAddressArray = [{ id: uuidv4(), tag: newTag, value: newAddress }];\r\n    }\r\n\r\n    setUserAddress(newAddressArray);\r\n\r\n    setDisplayAddress(newAddressArray[newAddressArray.length - 1].value);\r\n    let newUserData = {\r\n      ...userData,\r\n      address: newAddressArray\r\n    };\r\n    setUserData(newUserData);\r\n\r\n    userRef\r\n      .set(newUserData)\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n\r\n    console.log(newUserData);\r\n    setOpenNewAddress(false);\r\n  };\r\n\r\n  const handleQuant = (value) => {\r\n    console.log(\r\n      value,\r\n      props.minQuantity,\r\n      Number(value) < Number(props.minQuantity)\r\n    );\r\n    setQuant(value);\r\n    if (Number(value) < Number(props.minQuantity)) {\r\n      setErrors([`Minimum order quantity is ${props.minQuantity} litres`]);\r\n    }\r\n\r\n    if (Number(value) >= Number(props.minQuantity)) {\r\n      if (Number(value) * props.price > 10000) {\r\n        setErrors([`Credit Limit Exceeded`]);\r\n      }\r\n      if (Number(value) * props.price <= 10000) {\r\n        setErrors([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-start\"\r\n              >\r\n                <Box flexDirection=\"column\">\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    {/* {`SG-${random}`} */}\r\n                  </Typography>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    {currentUser && currentUser.displayName}\r\n                  </Typography>\r\n\r\n                  <Typography color=\"primary\" variant=\"h6\">\r\n                    {userData && userData.mobileNumber}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"caption\">\r\n                {''}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" variant=\"h4\">\r\n                {displayAddress}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <FormControl className={classes.formControl} width={1}>\r\n                {userData && userData.address && (\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    defaultValue={displayAddress}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {userAddress.map((item) => {\r\n                      return (\r\n                        <MenuItem key={item.tag} value={item.value}>\r\n                          {item.tag}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n\r\n                <FormHelperText>Select Address</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item></Grid>\r\n            <Grid item>\r\n              <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n                <FormControl className={classes.formControl}>\r\n                  <Fab\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"add\"\r\n                    onClick={handleClickOpenNewAddress}\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                  <FormHelperText>Add new address</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  autoFocus\r\n                  id=\"quantitySelect\"\r\n                  label=\"Qty\"\r\n                  onChange={(e) => handleQuant(e.target.value)}\r\n                  type=\"number\"\r\n                  min={props.minQuantity}\r\n                  defaultValue={props.minQuantity}\r\n                />\r\n                <FormHelperText>Choose Quantity</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Date picker dialog\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={selectedDate}\r\n                   onChange={handleDateChange} \r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date'\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  autoFocus\r\n                  id=\"price\"\r\n                  label=\"Price\"\r\n                  type=\"text\"\r\n                  value={quant * props.price}\r\n                  InputProps={{\r\n                    readOnly: true\r\n                  }}\r\n                />\r\n\r\n                <FormHelperText>Calculated Price</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  defaultValue={1}\r\n                  onChange={(e) => setPaymentType(e.target.value)}\r\n                >\r\n                  <MenuItem value={1}>Cash</MenuItem>\r\n                  <MenuItem value={2}>Credit</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Choose Payment Option</FormHelperText>\r\n              </FormControl>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          autoFocus\r\n          fullWidth\r\n          margin=\"dense\"\r\n          id=\"remarks\"\r\n          label=\"Remarks\"\r\n          type=\"text\"\r\n          onChange={(e) => setRemarks(e.target.value)}\r\n          placeholder=\"Place order for a later date | Provide delivery instructions\"\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Typography color=\"textSecondary\" variant=\"caption\">\r\n          *Actual Price will depend on the actual quantity of the fuel\r\n          Delivered.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography color=\"textSecondary\" variant=\"caption\">\r\n          **Fuel price is dependant on the day's pricing\r\n        </Typography>\r\n        <div>\r\n          <Dialog\r\n            disableBackdropClick\r\n            open={openNewAddress}\r\n            onClose={handleCloseNewAddress}\r\n          >\r\n            <DialogTitle>Add New Address</DialogTitle>\r\n            <DialogContent>\r\n              <form className={classes.container}>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"New Tag\"\r\n                    margin=\"normal\"\r\n                    name=\"addressTag\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setnewTag(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"New Address\"\r\n                    margin=\"normal\"\r\n                    name=\"address\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setnewAddress(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseNewAddress} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleAddNewAddress} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </DialogContent>\r\n      {errors && errors.length > 0 && <Alert severity=\"error\">{errors}</Alert>}\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handlePlaceOrder}\r\n          color=\"primary\"\r\n          disabled={errors.length !== 0}\r\n        >\r\n          Place Order\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OrderDialog from '../../dialog/OrderDialog';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { db } from '../../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Budget = (props) => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n\r\n  let today = new Date().toISOString().slice(0, 10);\r\n\r\n  const [userData, setUserData] = useState(props.userData);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, []);\r\n\r\n  const [openOrder, setOpenOrder] = useState(false);\r\n\r\n  const [priceModal, setPriceModal] = useState(false);\r\n  const [price, setPrice] = useState(props.price);\r\n\r\n  const handleClickOrderOpen = () => {\r\n    setOpenOrder(true);\r\n  };\r\n\r\n  const handleCloseOrder = () => {\r\n    setOpenOrder(false);\r\n  };\r\n\r\n  const handlePriceModalOpen = () => {\r\n    setPriceModal(true);\r\n  };\r\n\r\n  const handleClosePriceModal = () => {\r\n    setPriceModal(false);\r\n  };\r\n\r\n  const handleAddNewPrice = (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      db.collection('priceForTheDay')\r\n        .doc('e8kgvrn1XGzqM4JYAG3X')\r\n        .update({ price: parseInt(price), lastUpdated: Date.now() })\r\n        .then(function () {\r\n          console.log('Document successfully written!');\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n    handleClosePriceModal();\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {userData && userData.isCustomer && (\r\n        <div>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={3}>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n                  Today's Price\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"h3\">\r\n                  {props.price}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Box\r\n                mt={4}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                paddingRight={2}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  /* disabled={} */\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  onClick={handleClickOrderOpen}\r\n                >\r\n                  Order Now\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n            <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                <i className=\"fas fa-rupee-sign\"></i> / Litre\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n\r\n          <div>\r\n            {openOrder && (\r\n              <Dialog\r\n                open={openOrder}\r\n                onClose={handleCloseOrder}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n              >\r\n                <OrderDialog\r\n                  price={props.price}\r\n                  userData={props.userData}\r\n                  minQuantity={props.minQuantity}\r\n                  closeOrder={handleCloseOrder}\r\n                ></OrderDialog>\r\n              </Dialog>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {userData && userData.isOwner && (\r\n        <div>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={3}>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n                  Selling price today\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"h3\">\r\n                  {props.price}\r\n                  {'  '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    <i className=\"fas fa-rupee-sign\"></i> / Litre\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                paddingRight={2}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  /* disabled={} */\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  onClick={handlePriceModalOpen}\r\n                >\r\n                  Set Price\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <div>\r\n            {priceModal && (\r\n              <div>\r\n                <Dialog\r\n                  open={priceModal}\r\n                  onClose={handleCloseOrder}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                  fullWidth={true}\r\n                  maxWidth={'sm'}\r\n                >\r\n                  <DialogTitle>Set Price</DialogTitle>\r\n                  <DialogContent>\r\n                    <form className={classes.container}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Price\"\r\n                          margin=\"normal\"\r\n                          name=\"price\"\r\n                          variant=\"outlined\"\r\n                          required\r\n                          defaultValue={props.price}\r\n                          onChange={(e) => setPrice(e.target.value)}\r\n                        />\r\n                      </FormControl>\r\n                    </form>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClosePriceModal} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddNewPrice} color=\"primary\">\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n  Container,\r\n  Menu,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestOrders = (props) => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [row, setRow] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event, params) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setRow(params.row);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updatedOrders = [];\r\n\r\n    updatedOrders.push(\r\n      ...props.orders.map((order) => {\r\n        order['id'] = order.orderID;\r\n\r\n        order['quantity'] =\r\n          order.orderStatus !== 1 ? order.deliveredQuantity : order.quantity;\r\n        order['completed'] = order.delivered\r\n          ? order.delivered\r\n          : order.cancelled;\r\n\r\n        return order;\r\n      })\r\n    );\r\n\r\n    setOrders(updatedOrders);\r\n  }, []);\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  const handleOrderDetails = (params) => {\r\n    console.log(params.row);\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'orderID', headerName: 'Order Ref', width: 120 },\r\n    { field: 'customerName', headerName: 'Customer name', width: 160 },\r\n    { field: 'addressValue', headerName: 'Location', width: 180 },\r\n    {\r\n      field: 'created',\r\n      headerName: 'Date Ordered',\r\n      type: 'date',\r\n      width: 160,\r\n      renderCell: (params) => moment(params.value).format('DD/MM/YYYY HH:mm')\r\n    },\r\n    {\r\n      field: 'completed',\r\n      headerName: 'Date Completed',\r\n      type: 'date',\r\n      width: 160,\r\n      renderCell: (params) =>\r\n        params.value ? moment(params.value).format('DD/MM/YYYY HH:mm') : ''\r\n    },\r\n\r\n    {\r\n      field: 'paymentType',\r\n      headerName: 'Payment Method',\r\n      renderCell: (params) => (params.value === 1 ? 'Cash' : 'Credit'),\r\n      width: 180\r\n    },\r\n    {\r\n      field: 'quantity',\r\n      headerName: 'Quantity(Ltrs)',\r\n\r\n      width: 150\r\n    },\r\n    {\r\n      field: 'price',\r\n      headerName: 'Amount(Rs)',\r\n\r\n      width: 140\r\n    },\r\n    {\r\n      field: 'orderStatus',\r\n      headerName: 'Status',\r\n\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          style={\r\n            params.value === 1\r\n              ? {\r\n                  backgroundColor: 'orange',\r\n                  color: 'white'\r\n                }\r\n              : params.value === 2\r\n              ? {\r\n                  backgroundColor: 'green',\r\n                  color: 'white'\r\n                }\r\n              : {\r\n                  backgroundColor: 'red',\r\n                  color: 'white'\r\n                }\r\n          }\r\n          label={\r\n            params.value === 1\r\n              ? 'Pending'\r\n              : params.value === 2\r\n              ? 'Fulfilled'\r\n              : 'Cancelled'\r\n          }\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      sortable: false,\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <MoreHorizIcon\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onMouseOver={(e) => changeOnHover(e)}\r\n          onClick={(e) => handleClick(e, params)}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {orders && orders.length !== 0 && (\r\n        <Container style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={orders} columns={columns} pageSize={10} />\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>View Order details</MenuItem>\r\n            {row.orderStatus === 2 && (\r\n              <MenuItem onClick={() => console.log(row)}>View Invoice</MenuItem>\r\n            )}\r\n            {row.orderStatus === 2 && (\r\n              <MenuItem onClick={handleClose}>Download Invoice</MenuItem>\r\n            )}\r\n          </Menu>\r\n        </Container>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst CustomerList = (props) => {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const [row, setRow] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event, params) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setRow(params.row);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props.users);\r\n    const updatedUsers = [];\r\n\r\n    updatedUsers.push(\r\n      ...props.users.map((user) => {\r\n        return user;\r\n      })\r\n    );\r\n\r\n    setUsers(updatedUsers);\r\n  }, []);\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'customerName', headerName: 'Name', width: 130 },\r\n    {\r\n      field: 'mobileNumber',\r\n      headerName: 'Phone/Email',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n            {params.row.mobileNumber}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n            {params.row.email}\r\n          </Typography>\r\n        </Grid>\r\n      )\r\n    },\r\n    {\r\n      field: 'addressValue',\r\n      headerName: 'Address',\r\n      width: 180,\r\n      renderCell: (params) => params.row.address && params.row.address[0].value\r\n    },\r\n    { field: 'creditLimit', headerName: 'Credit Limit', width: 180 },\r\n    { field: 'totalOrders', headerName: 'Total Orders', width: 180 },\r\n    { field: 'orderValue', headerName: 'Order Value', width: 180 },\r\n    { field: 'created', headerName: 'Customer Since', width: 180 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Action',\r\n      sortable: false,\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <MoreHorizIcon\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onMouseOver={(e) => changeOnHover(e)}\r\n          onClick={(e) => handleClick(e, params)}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {users && users.length !== 0 && (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={users} columns={columns} pageSize={10} />\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={() => console.log(row)}>\r\n              Edit User details\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCustomerList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CustomerList;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem\r\n            divider={i < products.length - 1}\r\n            key={product.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              size=\"small\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Chip,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { db } from '../../../firebase';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\nimport { ChildCareSharp } from '@material-ui/icons';\r\nimport { ButtonGroup } from 'react-bootstrap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    minWidth: 275\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [validationState, setValidationState] = useState(1);\r\n  const [actualQuant, setActualQuant] = useState(0);\r\n  const [deliveryCharge, setDeliveryCharge] = useState(0);\r\n  const [actualAmount, setActualAmount] = useState(0);\r\n  const [otp, setOTP] = useState();\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  const [openFailed, setOpenFailed] = useState(false);\r\n  const [openCancelRemark, setOpenCancelRemark] = useState(false);\r\n  const [cancelRemark, setCancelRemark] = useState('');\r\n  const { currentUser } = useAuth();\r\n\r\n  function verifyOTP(orderOTP) {\r\n    if (orderOTP && otp == orderOTP) {\r\n      setValidationState(3);\r\n\r\n      setOTP();\r\n    } else {\r\n      setOpenFailed(true);\r\n      setValidationState(1);\r\n      setOTP();\r\n      console.log('OTP verification failed');\r\n    }\r\n  }\r\n  function handleCompleteOrder(actualQuant, deliveryCharge, orderID) {\r\n    let finalPrice;\r\n\r\n    actualQuant &&\r\n      deliveryCharge &&\r\n      (finalPrice =\r\n        Number(actualQuant) * Number(props.price) + Number(deliveryCharge));\r\n    db.collection('orders')\r\n      .doc(orderID)\r\n      .update({\r\n        orderStatus: 2,\r\n        delivered: Date.now(),\r\n        price: Number(finalPrice),\r\n        deliveredQuantity: Number(actualQuant),\r\n        deliveryCharge: Number(deliveryCharge)\r\n      })\r\n      .then(function () {\r\n        setOpenSuccess(true);\r\n        console.log('Document successfully written!');\r\n        setValidationState(1);\r\n        setOTP();\r\n      })\r\n      .catch(function (error) {\r\n        setOpenFailed(true);\r\n        console.error('Error writing document: ', error);\r\n        setValidationState(1);\r\n        setOTP();\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      setOpenSuccess(false);\r\n    }, 2000); //2 Second delay\r\n  }, [openSuccess]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      setOpenFailed(false);\r\n    }, 2000); //2 Second delay\r\n  }, [openFailed]);\r\n\r\n  const handleOpenCancelOrderRemark = () => {\r\n    setOpenCancelRemark(true);\r\n  };\r\n\r\n  const handleCloseCancelOrderRemark = () => {\r\n    setOpenCancelRemark(false);\r\n  };\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  function handleCancelOrder(e, orderID, cancelledBy) {\r\n    e.preventDefault();\r\n\r\n    db.collection('orders')\r\n      .doc(orderID)\r\n      .update({\r\n        orderStatus: 3,\r\n        cancelled: Date.now(),\r\n        cancelledBy: cancelledBy,\r\n        cancelRemark: cancelRemark\r\n      })\r\n      .then(function () {\r\n        props.openNotification();\r\n        console.log('Document successfully written!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n\r\n    handleCloseCancelOrderRemark();\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {props.userdata && props.userdata.isCustomer && (\r\n        <div>\r\n          <Dialog\r\n            open={openCancelRemark}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            onClose={handleCloseCancelOrderRemark}\r\n          >\r\n            <DialogTitle>Add Remarks</DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                className={classes.container}\r\n                onSubmit={(e) =>\r\n                  handleCancelOrder(e, props.order.orderID, 'Customer')\r\n                }\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Remarks\"\r\n                    margin=\"normal\"\r\n                    name=\"cancelRemarks\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setCancelRemark(e.target.value)}\r\n                  />\r\n\r\n                  <DialogActions>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) => handleCloseCancelOrderRemark()}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) =>\r\n                        handleCancelOrder(e, props.order.orderID, 'Customer')\r\n                      }\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={1}>\r\n              <Grid container justify=\"space-between\" spacing={6}>\r\n                <Grid item>\r\n                  <Typography color=\"textSecondary\" variant=\"h3\">\r\n                    Current Order\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    {props.order.orderID}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* <CancelIcon\r\n                    onMouseOver={(e) => changeOnHover(e)}\r\n                    onClick={(e) => handleOpenCancelOrderRemark()}\r\n                  /> */}\r\n                  <Chip\r\n                    color=\"secondary\"\r\n                    onMouseOver={(e) => changeOnHover(e)}\r\n                    label=\"Cancel\"\r\n                    onClick={(e) => handleOpenCancelOrderRemark()}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={4}>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.quantity}{' '}\r\n                      <Typography color=\"textSecondary\" variant=\"caption\">\r\n                        Liters\r\n                      </Typography>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                      {props.order.price}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={8}>\r\n                  <Grid item>\r\n                    <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n                  </Grid>\r\n                  <Grid item alignItems=\"center\">\r\n                    <Typography color=\"textSecondary\" variant=\"caption\">\r\n                      {`OTP : ${props.order.OTP}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </div>\r\n      )}\r\n      {props.userdata && props.userdata.isDriver && (\r\n        <div>\r\n          <Dialog\r\n            open={openCancelRemark}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            onClose={handleCloseCancelOrderRemark}\r\n          >\r\n            <DialogTitle>Add Remarks</DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                className={classes.container}\r\n                onSubmit={(e) =>\r\n                  handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                }\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Remarks\"\r\n                    margin=\"normal\"\r\n                    name=\"cancelRemarks\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setCancelRemark(e.target.value)}\r\n                  />\r\n\r\n                  <DialogActions>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) => handleCloseCancelOrderRemark()}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) =>\r\n                        handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                      }\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n          <Dialog\r\n            open={openSuccess}\r\n            /*  onClose={this.handleClose} */\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            disableBackdropClick\r\n          >\r\n            <Alert severity=\"success\">\r\n              <AlertTitle>Success</AlertTitle>\r\n              <strong>Order Completed!!</strong>\r\n            </Alert>\r\n          </Dialog>\r\n          <Dialog\r\n            open={openFailed}\r\n            /*  onClose={this.handleClose} */\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            disableBackdropClick\r\n          >\r\n            <Alert severity=\"error\">\r\n              <AlertTitle>Failed</AlertTitle>\r\n              <strong>Incorrect OTP!!</strong>\r\n            </Alert>\r\n          </Dialog>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={6}>\r\n              <Grid item>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  {props.order.orderID}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <Chip\r\n                  style={{\r\n                    backgroundColor: 'gray',\r\n                    color: 'white'\r\n                  }}\r\n                  onMouseOver={(e) => changeOnHover(e)}\r\n                  label=\"Cancel\"\r\n                  onClick={(e) => handleOpenCancelOrderRemark()}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {props.order.customerName}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              {props.order.mobileNumber}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.pos} component=\"p\">\r\n              {props.order.addressValue}\r\n            </Typography>\r\n            <Grid container justify=\"space-between\" className={classes.pos}>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.quantity}{' '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    Liters\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                  {props.order.price}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {validationState === 1 && (\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => setValidationState(2)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Enter OTP\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {validationState === 2 && (\r\n              <Grid\r\n                container=\"true\"\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={1}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"otp\"\r\n                    label=\"OTP\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => setOTP(e.target.value)}\r\n                    style={{ width: '50%' }}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => verifyOTP(props.order.OTP)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Verify OTP\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {validationState === 3 && (\r\n              <Grid container justify=\"space-between\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"actualQuantity\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => setActualQuant(e.target.value)}\r\n\r\n                    /* style={{ width: '25%' }} */\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"deliveryCharge\"\r\n                    label=\"DeliveryCharge\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => setDeliveryCharge(e.target.value)}\r\n                    notched=\"true\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleCompleteOrder(\r\n                        actualQuant,\r\n                        deliveryCharge,\r\n                        props.order.orderID\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                  >\r\n                    Complete Order\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <br></br>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                {props.order.remarks}\r\n              </Typography>\r\n            </Grid>\r\n          </CardContent>\r\n          {/* <Grid container justify=\"space-between\" spacing={1}>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\" variant=\"h3\">\r\n                  Current Order\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                  {props.order.orderID}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={6}>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.quantity}{' '}\r\n                      <Typography color=\"textSecondary\" variant=\"caption\">\r\n                        Liters\r\n                      </Typography>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                      {props.order.price}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container justify=\"start\" spacing={8}>\r\n                <Grid item alignItems=\"center\">\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    {props.order.address}Address\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={8}>\r\n                  <Grid item>\r\n                    <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n                  </Grid>\r\n                  <Grid item alignItems=\"center\">\r\n                    <Typography color=\"textSecondary\" variant=\"caption\">\r\n                      OTP : ####\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid> */}\r\n        </div>\r\n      )}\r\n      {props.userdata && props.userdata.isOwner && (\r\n        <div>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={6}>\r\n              <Grid item>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  {props.order.orderID}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {props.order.customerName}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              {props.order.mobileNumber}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.pos} component=\"p\">\r\n              {props.order.addressValue}\r\n            </Typography>\r\n            <Grid container justify=\"space-between\" className={classes.pos}>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.quantity}{' '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    Liters\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                  {props.order.price}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                {props.order.remarks}\r\n              </Typography>\r\n            </Grid>\r\n          </CardContent>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, title, value, icon, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              {title}\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              {value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>{icon}</Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  gridRoot: {\r\n    flexGrow: '1'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [67, 33],\r\n        backgroundColor: [colors.green[500], colors.orange[600]],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Cash', 'Credit']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Cash',\r\n      value: 67,\r\n      icon: MoneyIcon,\r\n      color: colors.green[500]\r\n    },\r\n    {\r\n      title: 'Credit',\r\n      value: 33,\r\n      icon: CreditCardIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader title=\"Monthly Earning\" />\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <Typography color=\"textPrimary\" variant=\"body1\">\r\n              This Month\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"body1\">\r\n              <strong>35,34,242</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Box /* height={300} */ position=\"relative\">\r\n              <Doughnut data={data} options={options} />\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n              {devices.map(({ color, icon: Icon, title, value }) => (\r\n                <Box key={title} p={1} textAlign=\"center\">\r\n                  <Icon color=\"action\" />\r\n                  <Typography color=\"textPrimary\" variant=\"body1\">\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography style={{ color }} variant=\"h2\">\r\n                    {value}%\r\n                  </Typography>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Box display=\"flex\" ml={2}>\r\n        <Typography color=\"primary\" variant=\"caption\">\r\n          Total value of Earnings for the month of Dec 2020 in Rupees\r\n        </Typography>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Page from 'src/components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport CustomerList from './CustomerList';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\nimport Loading from '../../../state/Loading';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { db } from '../../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  tab: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [price, setPrice] = useState(92);\r\n  const [minQuantity, setMinQuantity] = useState(0);\r\n  const [startingStock, setStartingStock] = useState(0);\r\n  const [maxFutureDay, setMaxFutureDay] = useState(0);\r\n  const { currentUser } = useAuth();\r\n  const [orders, setOrders] = useState([]);\r\n  const [allOrders, setAllOrders] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n  const [allOrderHistory, setAllOrderHistory] = useState([]);\r\n  const [openNotification, setOpenNotification] = useState(false);\r\n  let currentOrderRef;\r\n  let currentPriceRef;\r\n  let allOrderRef;\r\n  let orderHistoryRef;\r\n  let allOrderHistoryRef;\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [orderPageValue, setOrderPageValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleOrderPageChange = (event, newValue) => {\r\n    setOrderPageValue(newValue);\r\n  };\r\n\r\n  let today = new Date().toISOString().slice(0, 10);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n  };\r\n\r\n  {\r\n    currentUser &&\r\n      currentUser.uid &&\r\n      (currentOrderRef = db\r\n        .collection('orders')\r\n        .where('userID', '==', currentUser.uid)\r\n        .where('orderStatus', '==', 1));\r\n\r\n    currentPriceRef = db\r\n      .collection('priceForTheDay')\r\n      .doc('e8kgvrn1XGzqM4JYAG3X');\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await currentOrderRef.get();\r\n\r\n        let initialOrders = [];\r\n        data.forEach(function (doc) {\r\n          initialOrders.push(doc.data());\r\n        });\r\n\r\n        setOrders(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return currentOrderRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            updatedOrders.push(doc.data());\r\n          });\r\n        }\r\n        setOrders(updatedOrders);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return db.collection('users').onSnapshot(function (data) {\r\n        let userDataList = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            console.log(doc);\r\n            userDataList.push({\r\n              ...doc.data(),\r\n              id: doc.Df.key.path.segments[6]\r\n            });\r\n          });\r\n        }\r\n        setAllUsers(userDataList);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return currentPriceRef.onSnapshot(function (doc) {\r\n        if (doc) {\r\n          doc.data() && setPrice(doc.data().price);\r\n          doc.data() && setMinQuantity(doc.data().minQuantity);\r\n          doc.data() && setStartingStock(doc.data().startingStock);\r\n          doc.data() && setMaxFutureDay(doc.data().maxFutureDay);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    currentUser &&\r\n      (orderHistoryRef = db\r\n        .collection('orders')\r\n        .where('userID', '==', currentUser.uid));\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await orderHistoryRef.get();\r\n\r\n        let initialOrders = [];\r\n        data.forEach(function (doc) {\r\n          if (doc.data().orderStatus !== 1) {\r\n            initialOrders.push(doc.data());\r\n          }\r\n        });\r\n\r\n        setOrderHistory(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return orderHistoryRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            if (doc.data().orderStatus !== 1) {\r\n              updatedOrders.push(doc.data());\r\n            }\r\n          });\r\n        }\r\n        setOrderHistory(updatedOrders);\r\n      });\r\n    }, []);\r\n\r\n    allOrderRef = db.collection('orders').where('orderStatus', '==', 1);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await allOrderRef.get();\r\n        let initialOrders = [];\r\n\r\n        data.forEach(function (doc) {\r\n          initialOrders.push(doc.data());\r\n        });\r\n\r\n        setAllOrders(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return allOrderRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            updatedOrders.push(doc.data());\r\n          });\r\n        }\r\n        setAllOrders(updatedOrders);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  currentUser &&\r\n    currentUser.uid &&\r\n    (allOrderHistoryRef = db.collection('orders'));\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await allOrderHistoryRef.get();\r\n      let initialOrders = [];\r\n\r\n      data.forEach(function (doc) {\r\n        initialOrders.push(doc.data());\r\n      });\r\n\r\n      setAllOrderHistory(initialOrders);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return allOrderHistoryRef.onSnapshot(function (data) {\r\n      let updatedOrders = [];\r\n      if (data) {\r\n        data.forEach(function (doc) {\r\n          updatedOrders.push(doc.data());\r\n        });\r\n      }\r\n      setAllOrderHistory(updatedOrders);\r\n    });\r\n  }, []);\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .onSnapshot(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleOpenNotification = () => {\r\n    setOpenNotification(true);\r\n  };\r\n\r\n  const showCurrentOrder = (order) => {\r\n    return (\r\n      <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n        <TotalCustomers\r\n          order={order}\r\n          userdata={userData}\r\n          price={price}\r\n          openNotification={handleOpenNotification}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const date = new Date();\r\n  const month = date.toLocaleString('default', { month: 'long' });\r\n\r\n  const reports = [\r\n    {\r\n      title: 'Orders to be fulfilled',\r\n      value: 15,\r\n      icon: <SystemUpdateAltIcon />\r\n    },\r\n    {\r\n      title: 'Completed Orders Today',\r\n      value: 5,\r\n      icon: <LocalOfferIcon />\r\n    },\r\n    {\r\n      title: 'Cash Sales Today',\r\n      value: '1,35,723',\r\n      icon: <SystemUpdateAltIcon />\r\n    },\r\n    {\r\n      title: 'Credit Sales Today',\r\n      value: '87,273',\r\n      icon: <LocalOfferIcon />\r\n    },\r\n    {\r\n      title: `${month} Orders`,\r\n      value: '1,35,723',\r\n      icon: <InsertDriveFileIcon />\r\n    },\r\n    {\r\n      title: `Opening Stock`,\r\n      value: '10,000 Ltrs',\r\n      icon: <InvertColorsIcon />\r\n    },\r\n    {\r\n      title: `Available Stock`,\r\n      value: '8,773 Ltrs',\r\n      icon: <InvertColorsIcon />\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {userData && userData.isOwner !== undefined && (\r\n        <div>\r\n          <Paper color={'white'} maxWidth={true}>\r\n            <Tabs\r\n              aria-label=\"ownerNavigationTabs\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            >\r\n              <Tab\r\n                label={\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                      height: '10px'\r\n                    }}\r\n                  >\r\n                    <HomeIcon p={2} fontSize=\"small\" />{' '}\r\n                    <p style={{ paddingLeft: '10px' }}>Home</p>\r\n                  </div>\r\n                }\r\n              />\r\n              <Tab\r\n                label={\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n\r\n                      height: '10px'\r\n                    }}\r\n                  >\r\n                    <ShoppingCartIcon p={2} fontSize=\"small\" />{' '}\r\n                    <p style={{ paddingLeft: '10px' }}>Orders</p>\r\n                  </div>\r\n                }\r\n              />\r\n              <Tab\r\n                label={\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n\r\n                      height: '10px'\r\n                    }}\r\n                  >\r\n                    <SupervisedUserCircleIcon p={2} fontSize=\"small\" />{' '}\r\n                    <p style={{ paddingLeft: '10px' }}>Customers</p>\r\n                  </div>\r\n                }\r\n              />\r\n            </Tabs>\r\n          </Paper>\r\n        </div>\r\n      )}\r\n      <Page className={classes.root} title=\"Dashboard\">\r\n        {loading && <Loading />}\r\n\r\n        <Container maxWidth={false}>\r\n          {userData && userData.isCustomer && (\r\n            <div>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Welcome {currentUser && currentUser.displayName}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                  <Budget\r\n                    price={price}\r\n                    userData={userData}\r\n                    minQuantity={minQuantity}\r\n                    startingStock={startingStock}\r\n                    maxFutureDay={maxFutureDay}\r\n                  />\r\n                </Grid>\r\n                {orders.map((order) => {\r\n                  return showCurrentOrder(order);\r\n                })}\r\n\r\n                {orderHistory && orderHistory.length > 0 && (\r\n                  <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                    <div className={classes.tab}>\r\n                      <AppBar position=\"static\">\r\n                        <Tabs\r\n                          value={value}\r\n                          onChange={handleChange}\r\n                          aria-label=\"orderCreditHistoryTab\"\r\n                        >\r\n                          <Tab label=\"Order History\" />\r\n                          <Tab label=\"Credit History\" />\r\n                        </Tabs>\r\n                      </AppBar>\r\n                      <TabPanel value={value} index={0}>\r\n                        {orderHistory && orderHistory.length > 0 && (\r\n                          <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                            <LatestOrders\r\n                              orders={orderHistory}\r\n                              userdata={userData}\r\n                            />\r\n                          </Grid>\r\n                        )}\r\n                      </TabPanel>\r\n                      <TabPanel value={value} index={1}>\r\n                        Item Two\r\n                      </TabPanel>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          {userData && userData.isDriver && (\r\n            <div>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Welcome {currentUser && currentUser.displayName}\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                {allOrders.map((order) => {\r\n                  return showCurrentOrder(order);\r\n                })}\r\n\r\n                {allOrderHistory && allOrderHistory.length > 0 && (\r\n                  <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                    <LatestOrders\r\n                      orders={allOrderHistory}\r\n                      userdata={userData}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          {userData && userData.isOwner !== undefined && (\r\n            <div>\r\n              <TabPanel value={value} index={0}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs lg={4}>\r\n                    <TrafficByDevice />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Grid container spacing={3}>\r\n                      <Grid item lg={4} sm={6} xl={3} xs={12}>\r\n                        <Budget price={price} />\r\n                      </Grid>\r\n\r\n                      {reports.map((report) => {\r\n                        return (\r\n                          <Grid item lg={4} sm={6} xl={3} xs={12}>\r\n                            <TotalProfit\r\n                              title={report.title}\r\n                              value={report.value}\r\n                              icon={report.icon}\r\n                            />\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </Grid>\r\n                  {allOrderHistory && allOrderHistory.length > 0 && (\r\n                    <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                      <LatestOrders\r\n                        orders={allOrderHistory}\r\n                        userdata={userData}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                  <div className={classes.tab}>\r\n                    <AppBar position=\"static\">\r\n                      <Tabs\r\n                        value={orderPageValue}\r\n                        onChange={handleOrderPageChange}\r\n                        aria-label=\"orderPageTab\"\r\n                      >\r\n                        <Tab label=\"All Orders\" />\r\n                        <Tab label=\"Pending Orders\" />\r\n                      </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={orderPageValue} index={0}>\r\n                      {allOrderHistory && allOrderHistory.length > 0 && (\r\n                        <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                          <LatestOrders\r\n                            orders={allOrderHistory}\r\n                            userdata={userData}\r\n                          />\r\n                        </Grid>\r\n                      )}\r\n                    </TabPanel>\r\n                    <TabPanel value={orderPageValue} index={1}>\r\n                      {allOrders && allOrders.length > 0 ? (\r\n                        <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                          <LatestOrders\r\n                            orders={allOrders}\r\n                            userdata={userData}\r\n                          />\r\n                        </Grid>\r\n                      ) : (\r\n                        `No Pending Orders`\r\n                      )}\r\n                    </TabPanel>\r\n                  </div>\r\n                </Grid>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                {allUsers && allUsers.length > 0 && (\r\n                  <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                    <CustomerList users={allUsers} />\r\n                  </Grid>\r\n                )}\r\n              </TabPanel>\r\n            </div>\r\n          )}\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            open={openNotification}\r\n            autoHideDuration={5000}\r\n            onClose={() => setOpenNotification(false)}\r\n            key=\"TransitionLeft\"\r\n          >\r\n            <Alert severity=\"error\">Order Cancelled!</Alert>\r\n          </Snackbar>\r\n        </Container>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/app/customers',\r\n    icon: UsersIcon,\r\n    title: 'Customers'\r\n  },\r\n  {\r\n    href: '/app/products',\r\n    icon: ShoppingBagIcon,\r\n    title: 'Products'\r\n  },\r\n  {\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: '/app/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  },\r\n  {\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'Login'\r\n  },\r\n  {\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: 'Register'\r\n  },\r\n  {\r\n    href: '/404',\r\n    icon: AlertCircleIcon,\r\n    title: 'Error'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map(item => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip,\r\n  Container\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function UpdateProfileDialog(props) {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n\r\n  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  }\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await userRef.get();\r\n\r\n      setUserData(data.data());\r\n      data.data() &&\r\n        data.data().address &&\r\n        setInputFields(\r\n          data.data().address.map((address) => {\r\n            return { id: address.id, tag: address.tag, value: address.value };\r\n          })\r\n        );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [inputFields, setInputFields] = useState([\r\n    { id: uuidv4(), tag: '', value: '' }\r\n  ]);\r\n\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setfirstName] = useState(\r\n    currentUser.displayName.split(' ')[0]\r\n  );\r\n  const [lastName, setlastName] = useState(\r\n    currentUser.displayName.split(' ')[1]\r\n  );\r\n\r\n  const [mobileNumber, setmobileNumber] = useState();\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    console.log(inputFields, id, event);\r\n\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n        console.log(event.target.name, event.target.value);\r\n      }\r\n\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { id: uuidv4(), tag: '', value: '' }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    let values = [...inputFields];\r\n    /* values.pop(); */\r\n\r\n    values = values.filter((value) => value.id !== id);\r\n    console.log(\r\n      values,\r\n      values.filter((value) => value.id !== id)\r\n    );\r\n\r\n    setInputFields(values);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (firstName === '' || lastName === '') {\r\n      return setError('Name Cannot be empty');\r\n    }\r\n\r\n    if (mobileNumber && typeof mobileNumber !== 'undefined') {\r\n      let pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(mobileNumber)) {\r\n        return setError('Please enter only number');\r\n      } else if (mobileNumber.length !== 10) {\r\n        return setError('Please enter valid phone number');\r\n      }\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n\r\n      // Updates the user attributes:\r\n\r\n      currentUser\r\n        .updateProfile({\r\n          displayName: `${firstName} ${lastName}`\r\n        })\r\n        .then(\r\n          function () {\r\n            console.log('Name Updated');\r\n          },\r\n          function (error) {\r\n            setError(error);\r\n          }\r\n        );\r\n\r\n      let newUserData = {\r\n        ...userData,\r\n        mobileNumber: mobileNumber ? mobileNumber : userData.mobileNumber,\r\n        address: inputFields\r\n      };\r\n      console.log(newUserData);\r\n      return db\r\n        .collection('users')\r\n        .doc(currentUser.uid)\r\n        .set(newUserData)\r\n        .then(() => props.closeOrder());\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError('Failed to Update account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <DialogContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Box mb={3}>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Update your profile\r\n              </Typography>\r\n            </Box>\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            <form className={classes.root} noValidate>\r\n              <TextField\r\n                fullWidth\r\n                label=\"First Name\"\r\n                margin=\"normal\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={firstName}\r\n                onChange={(e) => setfirstName(e.target.value)}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last Name\"\r\n                margin=\"normal\"\r\n                name=\"LastName\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={lastName}\r\n                onChange={(e) => setlastName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mobile number\"\r\n                margin=\"normal\"\r\n                name=\"mobileNumber\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={props.userData && props.userData.mobileNumber}\r\n                onChange={(e) => setmobileNumber(e.target.value)}\r\n              />\r\n\r\n              {userData &&\r\n                userData.isCustomer &&\r\n                inputFields &&\r\n                inputFields.length > 0 &&\r\n                inputFields.map(\r\n                  (inputField) => (\r\n                    console.log(inputField),\r\n                    (\r\n                      <div key={inputField.id}>\r\n                        <TextField\r\n                          name=\"tag\"\r\n                          label=\"Tag\"\r\n                          variant=\"outlined\"\r\n                          /* size=\"small\" */\r\n                          style={{ width: '25%' }}\r\n                          defaultValue={inputField ? inputField.tag : ''}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                        <TextField\r\n                          name=\"value\"\r\n                          label=\"Value\"\r\n                          variant=\"outlined\"\r\n                          defaultValue={inputField ? inputField.value : ''}\r\n                          style={{ width: '48%' }}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                        <IconButton\r\n                          disabled={inputFields && inputFields.length === 1}\r\n                          onClick={() => handleRemoveFields(inputField.id)}\r\n                        >\r\n                          <RemoveIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={handleAddFields}>\r\n                          <AddIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    )\r\n                  )\r\n                )}\r\n            </form>\r\n          </Container>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleSubmit} color=\"primary\">\r\n          Update Profile\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function UserSettingsDialog(props) {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(props.price);\r\n  const [error, setError] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [minQuantity, setMinQuantity] = useState(0);\r\n  const [startingStock, setStartingStock] = useState(0);\r\n  const [maxFutureDay, setMaxFutureDay] = useState(0);\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  let currentPriceRef;\r\n\r\n  currentPriceRef = db.collection('priceForTheDay').doc('e8kgvrn1XGzqM4JYAG3X');\r\n\r\n  useEffect(() => {\r\n    return currentPriceRef.onSnapshot(function (doc) {\r\n      if (doc) {\r\n        console.log(doc.data());\r\n        doc.data() && setPrice(doc.data().price);\r\n        doc.data() && setMinQuantity(doc.data().minQuantity);\r\n        doc.data() && setStartingStock(doc.data().startingStock);\r\n        doc.data() && setMaxFutureDay(doc.data().maxFutureDay);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (name, value) => {\r\n    switch (name) {\r\n      case 'fuelPrice':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            fuelPrice: {\r\n              // object that we want to update\r\n\r\n              message: 'Price has to be a valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            fuelPrice: {\r\n              // object that we want to update\r\n              message: 'Price cannot be 0' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            fuelPrice: null\r\n          }));\r\n          setPrice(value);\r\n        }\r\n        break;\r\n      case 'startingStock':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            startingStock: {\r\n              // object that we want to update\r\n\r\n              message: 'Stock has to be a valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            startingStock: {\r\n              // object that we want to update\r\n              message: 'Stock cannot be 0' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            startingStock: null\r\n          }));\r\n          setStartingStock(value);\r\n        }\r\n        break;\r\n      case 'minQuantity':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            minQuantity: {\r\n              // object that we want to update\r\n\r\n              message: 'Quantity has to be a valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            minQuantity: {\r\n              // object that we want to update\r\n              message: 'Minimum Quantity cannot be 0' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            minQuantity: null\r\n          }));\r\n          setMinQuantity(value);\r\n        }\r\n        break;\r\n      case 'maxFutureDay':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            maxFutureDay: {\r\n              // object that we want to update\r\n\r\n              message: 'PLease provide valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            maxFutureDay: null\r\n          }));\r\n          setMaxFutureDay(value);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      db.collection('priceForTheDay')\r\n        .doc('e8kgvrn1XGzqM4JYAG3X')\r\n        .update({\r\n          price: parseInt(price),\r\n          lastUpdated: Date.now(),\r\n          minQuantity: minQuantity,\r\n          maxFutureDay: maxFutureDay,\r\n          startingStock: startingStock\r\n        })\r\n        .then(function () {\r\n          console.log('Document successfully written!');\r\n          setOpenSuccess(true);\r\n\r\n          setTimeout(function () {\r\n            setOpenSuccess(false);\r\n            props.closeOrder();\r\n          }, 1000);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openSuccess}\r\n        /*  onClose={this.handleClose} */\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        disableBackdropClick\r\n      >\r\n        <Alert severity=\"success\">\r\n          <AlertTitle>Success</AlertTitle>\r\n          <strong>Settings Updated</strong>\r\n        </Alert>\r\n      </Dialog>\r\n      <DialogContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Box mb={3}>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Update settings\r\n              </Typography>\r\n            </Box>\r\n            {/*  {error && <Alert severity=\"error\">{error}</Alert>} */}\r\n            <form className={classes.root} noValidate>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Fuel Price\"\r\n                margin=\"normal\"\r\n                name=\"fuelPrice\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={price}\r\n                onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n              />\r\n              {error && error.fuelPrice && (\r\n                <Alert severity=\"error\">{error.fuelPrice.message}</Alert>\r\n              )}\r\n              {startingStock && (\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Starting Stock\"\r\n                  margin=\"normal\"\r\n                  name=\"startingStock\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  defaultValue={startingStock}\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                />\r\n              )}\r\n              {error && error.startingStock && (\r\n                <Alert severity=\"error\">{error.startingStock.message}</Alert>\r\n              )}\r\n              {minQuantity && (\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Minimum Quantity\"\r\n                  margin=\"normal\"\r\n                  name=\"minQuantity\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  type=\"number\"\r\n                  defaultValue={minQuantity}\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                />\r\n              )}\r\n              {error && error.minQuantity && (\r\n                <Alert severity=\"error\">{error.minQuantity.message}</Alert>\r\n              )}\r\n\r\n              <div>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Vehicle number\"\r\n                  margin=\"normal\"\r\n                  name=\"vehicleNumber\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  disabled\r\n                  /* onChange={(e) => setmobileNumber(e.target.value)} */\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Driver name\"\r\n                  margin=\"normal\"\r\n                  name=\"driverName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  disabled\r\n                  /* onChange={(e) => setmobileNumber(e.target.value)} */\r\n                />\r\n                {maxFutureDay && (\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Advanced booking limit(days)\"\r\n                    margin=\"normal\"\r\n                    name=\"maxFutureDay\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    defaultValue={maxFutureDay}\r\n                    onChange={(e) =>\r\n                      handleChange(e.target.name, e.target.value)\r\n                    }\r\n                  />\r\n                )}\r\n                {error && error.maxFutureDay && (\r\n                  <Alert severity=\"error\">{error.maxFutureDay.message}</Alert>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </Container>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleSubmit} color=\"primary\">\r\n          Update Settings\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { navigate } from 'hookrouter';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\nimport UpdateProfileDialog from '../../views/dialog/UpdateProfileDialog';\r\nimport UserSettingsDialog from '../../views/dialog/UserSettingsDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport db from '../../firebase';\r\n\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '0.7rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '1.2rem'\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2rem'\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, userData, price, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const { logout } = useAuth();\r\n  /* const navigate = useNavigate(); */\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n  const { currentUser } = useAuth();\r\n  const [drawerState, setDrawerState] = useState(false);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event) {\r\n      if (\r\n        event.type === 'keydown' &&\r\n        (event.key === 'Tab' || event.key === 'Shift')\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    setDrawerState(open);\r\n  };\r\n\r\n  const handleClickUpdateProfileOpen = () => {\r\n    setOpenUpdate(true);\r\n  };\r\n\r\n  const handleClickUpdateSettingsOpen = () => {\r\n    setOpenSettings(true);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleCloseSettings = () => {\r\n    toggleDrawer(false);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await logout();\r\n      navigate('/login', true);\r\n    } catch {\r\n      console.log('Failed to log out');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AppBar\r\n          className={clsx(classes.root, className)}\r\n          elevation={0}\r\n          {...rest}\r\n        >\r\n          <Toolbar>\r\n            <Logo />\r\n            <Box flexGrow={1} />\r\n            {/* <Typography style={{ color: 'white' }} variant=\"h3\">\r\n              SHAKTHI GANAPATHI FUEL STATION\r\n            </Typography> */}\r\n            <ThemeProvider theme={theme}>\r\n              <Typography style={{ color: 'white' }} variant=\"h3\">\r\n                SHAKTHI GANAPATHI FUEL STATION\r\n              </Typography>\r\n            </ThemeProvider>\r\n            <Box flexGrow={1} />\r\n            {/* <Hidden mdDown> */}\r\n            {userData && userData.isOwner && (\r\n              <IconButton color=\"inherit\">\r\n                <Badge\r\n                  badgeContent={notifications.length}\r\n                  color=\"primary\"\r\n                  variant=\"dot\"\r\n                >\r\n                  <SettingsIcon onClick={toggleDrawer(true)} />\r\n                </Badge>\r\n              </IconButton>\r\n            )}\r\n            <IconButton color=\"inherit\">\r\n              <Badge\r\n                badgeContent={notifications.length}\r\n                color=\"primary\"\r\n                variant=\"dot\"\r\n              >\r\n                <PersonOutlineIcon onClick={handleClickUpdateProfileOpen} />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n              <InputIcon onClick={handleSubmit} />\r\n            </IconButton>\r\n            {/* </Hidden> */}\r\n            {/* <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          {openUpdate && (\r\n            <Dialog\r\n              open={openUpdate}\r\n              onClose={handleCloseUpdate}\r\n              aria-labelledby=\"form-dialog-title\"\r\n              fullWidth={true}\r\n              maxWidth={'sm'}\r\n            >\r\n              <UpdateProfileDialog\r\n                userData={userData}\r\n                closeOrder={handleCloseUpdate}\r\n              ></UpdateProfileDialog>\r\n            </Dialog>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {/* <Dialog\r\n              open={openSettings}\r\n              onClose={handleCloseSettings}\r\n              aria-labelledby=\"form-dialog-title\"\r\n              fullWidth={true}\r\n              maxWidth={'sm'}\r\n            > */}\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerState}\r\n            onClose={toggleDrawer(false)}\r\n          >\r\n            <UserSettingsDialog\r\n              userData={userData}\r\n              price={price}\r\n              closeOrder={toggleDrawer(false)}\r\n            ></UserSettingsDialog>\r\n          </Drawer>\r\n          {/* </Dialog> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n    /* [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    } */\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(1.5, 1),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[800],\r\n    bottom: 0,\r\n    position: 'sticky'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  const [userData, setUserData] = useState();\r\n  const [price, setPrice] = useState(92);\r\n\r\n  const currentPriceRef = db\r\n    .collection('priceForTheDay')\r\n    .doc('e8kgvrn1XGzqM4JYAG3X');\r\n\r\n  /*   useEffect(() => {\r\n        return currentPriceRef.onSnapshot(function (doc) {\r\n          if (doc) {\r\n            doc.data() && setPrice(doc.data().price);\r\n          }\r\n        });\r\n      }, []); */\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .onSnapshot((snapShot) => setUserData(snapShot.data()));\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to Update user data');\r\n    }\r\n\r\n    return currentPriceRef.onSnapshot(function (doc) {\r\n      if (doc) {\r\n        doc.data() && setPrice(doc.data().price);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar\r\n        onMobileNavOpen={() => setMobileNavOpen(true)}\r\n        userData={userData}\r\n        updateUserData={setUserData}\r\n        price={price}\r\n        setPrice={setPrice}\r\n      />\r\n\r\n      {userData && userData.isOwner !== undefined && <p>HI</p>}\r\n      {/* <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      /> */}\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            {/* <Outlet /> */}\r\n            {children}\r\n            <footer className={classes.footer}>\r\n              <Container /*  maxWidth=\"sm\" */>\r\n                <Grid container justify=\"center\" className={classes.pos}>\r\n                  <Grid item>\r\n                    <Typography style={{ color: 'black' }} variant=\"caption\">\r\n                      Phone : 9008761088 | Email : r6mesh@gmail.com | Toll Free\r\n                      No : 1800 2333 555\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { A, navigate } from 'hookrouter';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  /* const navigate = useNavigate(); */\r\n  const { signup } = useAuth();\r\n  const { currentUser } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setfirstName] = useState(false);\r\n  const [lastName, setlastName] = useState(false);\r\n  const [email, setemail] = useState(false);\r\n  const [password, setpassword] = useState(false);\r\n  const [confirmPassword, setconfirmPassword] = useState(false);\r\n  const [mobileNumber, setmobileNumber] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      return setError('Passwords do not match');\r\n    }\r\n\r\n    if (mobileNumber && typeof mobileNumber !== 'undefined') {\r\n      let pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(mobileNumber)) {\r\n        return setError('Please enter only number');\r\n      } else if (mobileNumber.length !== 10) {\r\n        return setError('Please enter valid phone number');\r\n      }\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await signup(email, password).then((cred) => {\r\n        // Updates the user attributes:\r\n\r\n        cred.user\r\n          .updateProfile({\r\n            displayName: `${firstName} ${lastName}`\r\n          })\r\n          .then(function () {\r\n            console.log('Name Updated');\r\n          });\r\n\r\n        return db\r\n          .collection('users')\r\n          .doc(cred.user.uid)\r\n          .set({\r\n            isCustomer: true,\r\n            mobileNumber: mobileNumber,\r\n            displayName: `${firstName} ${lastName}`,\r\n            email: email\r\n          });\r\n      });\r\n      navigate('/app/dashboard', { replace: true });\r\n    } catch {\r\n      setError('Failed to create an account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Box mb={3}>\r\n            <Typography color=\"textPrimary\" variant=\"h2\">\r\n              Create new account\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n              Use your email to create new account\r\n            </Typography>\r\n          </Box>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          <form className=\"form\" noValidate>\r\n            <TextField\r\n              fullWidth\r\n              label=\"First Name\"\r\n              margin=\"normal\"\r\n              name=\"firstName\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setfirstName(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Last Name\"\r\n              margin=\"normal\"\r\n              name=\"LastName\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setlastName(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Mobile number\"\r\n              margin=\"normal\"\r\n              name=\"mobileNumber\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setmobileNumber(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setemail(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setpassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Confirm Password\"\r\n              margin=\"normal\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            />\r\n\r\n            <Box my={2}>\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={loading}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign up now\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n          <Typography color=\"textSecondary\" variant=\"body1\">\r\n            Have an account?{' '}\r\n            <A /* component={RouterLink} */ href=\"/login\" variant=\"h6\">\r\n              Sign in\r\n            </A>\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\n/* import { useRoutes } from 'react-router-dom'; */\r\nimport { useRoutes } from 'hookrouter';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\n/* import routes from 'src/routes'; */\r\nimport { AuthProvider } from 'src/contexts/AuthContext';\r\nimport { StoreProvider, createStore } from 'easy-peasy';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport model from './model';\r\n\r\nconst App = () => {\r\n  const routes = {\r\n    '/': () => (\r\n      <MainLayout>\r\n        <LoginView />\r\n      </MainLayout>\r\n    ),\r\n    '/login': () => (\r\n      <MainLayout>\r\n        <LoginView />\r\n      </MainLayout>\r\n    ),\r\n    '/app/dashboard': () => (\r\n      <DashboardLayout>\r\n        <DashboardView />\r\n      </DashboardLayout>\r\n    ),\r\n    '/register': () => (\r\n      <MainLayout>\r\n        <RegisterView />\r\n      </MainLayout>\r\n    )\r\n  };\r\n\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n\r\n        {/* <LoginView /> */}\r\n        {routing || <h1>Invalid routing</h1>}\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nReactDOM.render(\r\n  /* <BrowserRouter> */\r\n  <App />,\r\n  /* </BrowserRouter> */\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}