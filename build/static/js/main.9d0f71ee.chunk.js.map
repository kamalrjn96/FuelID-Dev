{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","firebase.js","contexts/AuthContext.js","components/Logo.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","state/Loading.js","components/Page.js","views/auth/LoginView.js","views/dialog/OrderDialog.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/CustomerList.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/DashboardView/index.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","views/dialog/UpdateProfileDialog.js","views/dialog/UserSettingsDialog.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","views/auth/RegisterView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Logo","props","Avatar","alt","src","breakpoints","up","root","toolbar","TopBar","className","rest","classes","AppBar","clsx","elevation","Toolbar","Box","flexGrow","ThemeProvider","Typography","style","color","variant","display","overflow","wrapper","flex","paddingTop","contentContainer","content","footer","spacing","marginTop","type","grey","position","MainLayout","Container","Grid","container","justify","pos","item","Loading","userData","setUserData","collection","doc","uid","get","then","data","console","log","err","Page","forwardRef","ref","title","Helmet","paddingBottom","scrollPaper","alignItems","LoginView","emailRef","useRef","passwordRef","error","setError","setemail","resetEmail","setResetEmail","setpassword","openPasswordReset","setOpenPasswordReset","loadState","e","preventDefault","navigate","alert","catch","code","message","handleClosePasswordReset","changeOnHover","target","cursor","flexDirection","justifyContent","maxWidth","Dialog","open","aria-labelledby","aria-describedby","onClose","DialogTitle","DialogContent","FormControl","formControl","TextField","fullWidth","label","name","required","onChange","DialogActions","Button","onMouseOver","onClick","mb","severity","noValidate","innerRef","my","disabled","size","xs","href","avatar","red","differenceIcon","differenceValue","marginRight","minWidth","selectEmpty","OrderDialog","userRef","minQuantity","quant","setQuant","paymentType","remarks","setRemarks","newTag","setnewTag","newAddress","setnewAddress","Date","errors","setErrors","address","userAddress","setUserAddress","displayAddress","setDisplayAddress","random","openNewAddress","setOpenNewAddress","handleCloseNewAddress","direction","displayName","mobileNumber","Select","labelId","id","event","placeholder","map","MenuItem","key","tag","FormHelperText","Fab","aria-label","autoFocus","Number","price","defaultValue","InputProps","readOnly","disableBackdropClick","newAddressArray","uuidv4","length","newUserData","set","userID","orderID","quantity","orderStatus","customerName","created","now","addressValue","OTP","closeOrder","monthNames","Budget","today","toISOString","slice","split","openOrder","setOpenOrder","priceModal","setPriceModal","setPrice","handleCloseOrder","handleClosePriceModal","Card","isCustomer","CardContent","gutterBottom","mt","paddingRight","isOwner","lastUpdated","getMonth","update","parseInt","actions","LatestOrders","orders","setOrders","row","setRow","anchorEl","setAnchorEl","handleClose","updatedOrders","push","order","deliveredQuantity","delivered","cancelled","columns","field","headerName","renderCell","params","moment","format","Chip","sortable","currentTarget","handleClick","rows","pageSize","Menu","keepMounted","CustomerList","users","setUsers","updatedUsers","filter","reduce","b","toLocaleString","uuid","subtract","image","orange","green","bullet","transform","marginBottom","TotalCustomers","validationState","setValidationState","actualQuant","setActualQuant","deliveryCharge","setDeliveryCharge","otp","setOTP","openSuccess","setOpenSuccess","openFailed","setOpenFailed","openCancelRemark","setOpenCancelRemark","cancelRemark","setCancelRemark","setTimeout","handleOpenCancelOrderRemark","handleCloseCancelOrderRemark","handleCancelOrder","cancelledBy","openNotification","userdata","onSubmit","isDriver","AlertTitle","component","orderOTP","notched","finalPrice","handleCompleteOrder","TotalProfit","icon","gridRoot","TrafficByDevice","useTheme","cashPercent","trunc","cash","total","creditPercent","credit","datasets","hoverBorderColor","labels","animation","cutoutPercentage","layout","legend","maintainAspectRatio","responsive","tooltips","bodyFontColor","divider","enabled","footerFontColor","intersect","mode","titleFontColor","devices","MoneyIcon","CreditCardIcon","CardHeader","Icon","p","textAlign","ml","month","minHeight","tab","Dashboard","currentOrderRef","currentPriceRef","allOrderRef","orderHistoryRef","allOrderHistoryRef","setLastUpdated","setMinQuantity","startingStock","setStartingStock","maxFutureDay","setMaxFutureDay","allOrders","setAllOrders","allUsers","setAllUsers","orderHistory","setOrderHistory","allOrderHistory","setAllOrderHistory","setOpenNotification","setValue","orderPageValue","setOrderPageValue","handleChange","newValue","Alert","TabPanel","role","hidden","where","initialOrders","forEach","fetchData","onSnapshot","userDataList","Df","path","segments","handleOpenNotification","showCurrentOrder","lg","sm","xl","date","getThisMonthOrders","thisMonthOrders","thisMonthOrderValues","thisMonthCashOrderValues","thisMonthCreditOrderValues","reports","undefined","Paper","Tabs","Tab","paddingLeft","md","report","Snackbar","anchorOrigin","vertical","autoHideDuration","button","fontWeightMedium","textTransform","active","NavItem","ListItem","disableGutters","activeClassName","RouterLink","to","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","mobileDrawer","desktopDrawer","NavBar","onMobileClose","openMobile","useLocation","pathname","Divider","List","Hidden","lgUp","Drawer","anchor","mdDown","defaultProps","UpdateProfileDialog","setInputFields","inputFields","firstName","setfirstName","lastName","setlastName","setmobileNumber","handleChangeInput","newInputFields","handleAddFields","RegExp","test","updateProfile","inputField","IconButton","values","handleRemoveFields","UserSettingsDialog","isNaN","prevError","fuelPrice","onMobileNavOpen","notifications","openUpdate","setOpenUpdate","drawerState","setDrawerState","toggleDrawer","handleCloseUpdate","Badge","badgeContent","DashboardLayout","setMobileNavOpen","snapShot","updateUserData","RegisterView","confirmPassword","setconfirmPassword","cred","replace","App","routes","DashboardView","routing","useRoutes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d0f71ee.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const db = app.firestore();\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst Logo = (props) => {\r\n  return <Avatar alt=\"Logo\" src=\"/static/logo.jpg\" {...props} />;\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  Box,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h2 = {\r\n  fontSize: '0.8rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '1.2rem'\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2rem'\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Logo />\r\n        <Box flexGrow={1} />\r\n        {/* <Typography style={{ color: 'white' }} variant=\"h3\">\r\n              SHAKTHI GANAPATHI FUEL STATION\r\n            </Typography> */}\r\n        <ThemeProvider theme={theme}>\r\n          <Typography style={{ color: 'white' }} variant=\"h2\">\r\n            Shakti Ganapathi Fuel Station\r\n          </Typography>\r\n        </ThemeProvider>\r\n        <Box flexGrow={1} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(1.5, 1),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[800],\r\n    bottom: 0,\r\n    position: 'sticky'\r\n  }\r\n}));\r\n\r\nconst MainLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            {/* <Outlet /> */}\r\n            {children}\r\n            <footer className={classes.footer}>\r\n              <Container /*  maxWidth=\"sm\" */>\r\n                <Grid container justify=\"center\" className={classes.pos}>\r\n                  <Grid item>\r\n                    <Typography style={{ color: 'black' }} variant=\"caption\">\r\n                      Phone : 9008761088 | Email : r6mesh@gmail.com | Toll Free\r\n                      No : 1800 2333 555\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { db } from '../firebase';\r\n\r\nconst Loading = () => {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n            console.log(doc.data());\r\n            console.log(userData);\r\n            setLoading(false);\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, [currentUser]);\r\n  return loading && <div>Loading...</div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { A, navigate } from 'hookrouter';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Loading from '../../state/Loading';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  scrollPaper: {\r\n    alignItems: 'baseline'\r\n  }\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  /* const navigate = useNavigate(); */\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n  const { login, resetPassword, currentUser } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setemail] = useState(false);\r\n  const [resetEmail, setResetEmail] = useState(false);\r\n  const [password, setpassword] = useState(false);\r\n  const [openPasswordReset, setOpenPasswordReset] = useState(false);\r\n\r\n  const loadState = () => {\r\n    return <Loading />;\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError('');\r\n\r\n      setLoading(true);\r\n      await login(email, password);\r\n      loadState();\r\n      navigate('/app/dashboard', true);\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleReset() {\r\n    await resetPassword(resetEmail)\r\n      .then(() => {\r\n        window.alert(`Email has been sent to ${resetEmail}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.code, error.message);\r\n        window.alert(`${error.message} Enter Valid e-mail ID`);\r\n      });\r\n    setResetEmail();\r\n    handleClosePasswordReset();\r\n  }\r\n\r\n  const handleClosePasswordReset = () => {\r\n    setOpenPasswordReset(false);\r\n  };\r\n\r\n  const handleOpenPasswordReset = () => {\r\n    setOpenPasswordReset(true);\r\n  };\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!currentUser ? (\r\n        <Page className={classes.root} title=\"Login\">\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            height=\"100%\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Container maxWidth=\"sm\">\r\n              <Dialog\r\n                open={openPasswordReset}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                onClose={handleClosePasswordReset}\r\n                className={classes.scrollPaper}\r\n              >\r\n                <DialogTitle>Enter Email ID to reset Password</DialogTitle>\r\n                <DialogContent>\r\n                  <form\r\n                    className={classes.container} /* onSubmit={handleReset} */\r\n                  >\r\n                    <FormControl className={classes.formControl}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email ID\"\r\n                        margin=\"normal\"\r\n                        name=\"resetEmailID\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        onChange={(e) => setResetEmail(e.target.value)}\r\n                      />\r\n\r\n                      <DialogActions>\r\n                        <Button\r\n                          onMouseOver={(e) => changeOnHover(e)}\r\n                          onClick={(e) => handleClosePasswordReset()}\r\n                          color=\"primary\"\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          onMouseOver={(e) => changeOnHover(e)}\r\n                          onClick={handleReset}\r\n                          color=\"primary\"\r\n                        >\r\n                          Ok\r\n                        </Button>\r\n                      </DialogActions>\r\n                    </FormControl>\r\n                  </form>\r\n                </DialogContent>\r\n              </Dialog>\r\n              {/* <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required('Password is required')\r\n            })}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form\r\n              /* onSubmit={\r\n                  (handleSubmit,\r\n                  console.log({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values\r\n                  }))\r\n                } \r\n              > */}\r\n              <Box mb={3}>\r\n                <Typography color=\"textPrimary\" variant=\"h2\">\r\n                  Sign in\r\n                </Typography>\r\n              </Box>\r\n              {error && <Alert severity=\"error\">{error}</Alert>}\r\n              <form className=\"form\" noValidate>\r\n                <TextField\r\n                  /*  error={Boolean(touched.email && errors.email)} */\r\n                  fullWidth\r\n                  /* helperText={touched.email && errors.email} */\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  /* onBlur={handleBlur}\r\n                    onChange={handleChange} */\r\n                  type=\"email\"\r\n                  required\r\n                  variant=\"outlined\"\r\n                  innerRef={emailRef}\r\n                  onChange={(e) => setemail(e.target.value)}\r\n                />\r\n                <TextField\r\n                  /* error={Boolean(touched.password && errors.password)} */\r\n                  fullWidth\r\n                  /* helperText={touched.password && errors.password} */\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  /* onBlur={handleBlur}\r\n                    onChange={handleChange} */\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  innerRef={passwordRef}\r\n                  onChange={(e) => setpassword(e.target.value)}\r\n                  required\r\n                />\r\n\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                  <Grid container>\r\n                    <Grid item xs>\r\n                      {/* <A href=\"/forgotPassword\" variant=\"body2\">\r\n                        Forgot password?\r\n                      </A> */}\r\n                      <Button onClick={handleOpenPasswordReset}>\r\n                        Forgot password?\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography color=\"textSecondary\" variant=\"body1\">\r\n                        Don&apos;t have an account?{' '}\r\n                        <A href=\"/register\" variant=\"body2\">\r\n                          Sign up\r\n                        </A>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </form>\r\n              {/* </form>\r\n            )}\r\n          </Formik> */}\r\n            </Container>\r\n          </Box>\r\n          {/* <Dialog\r\n            open={openPassword}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            onClose={handleCloseCancelOrderRemark}\r\n          >\r\n            <DialogTitle>Enter Email Address to reset Password</DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                className={classes.container}\r\n                onSubmit={(e) =>\r\n                  handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                }\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Remarks\"\r\n                    margin=\"normal\"\r\n                    name=\"cancelRemarks\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setCancelRemark(e.target.value)}\r\n                  />\r\n\r\n                  <DialogActions>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) => handleCloseCancelOrderRemark()}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) =>\r\n                        handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                      }\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog> */}\r\n        </Page>\r\n      ) : (\r\n        navigate('/app/dashboard', true)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { db } from '../../firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function OrderDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [quant, setQuant] = useState(props.minQuantity);\r\n  const [paymentType, setPaymentType] = useState(1);\r\n  const [remarks, setRemarks] = useState('');\r\n  const [newTag, setnewTag] = useState();\r\n  const [newAddress, setnewAddress] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date('2014-08-18T21:11:54')\r\n  );\r\n  const [errors, setErrors] = useState([]);\r\n  const { currentUser } = useAuth();\r\n\r\n  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  }\r\n\r\n  const [userData, setUserData] = useState(props.userData);\r\n\r\n  const [userAddress, setUserAddress] = useState(\r\n    userData && userData.address ? userData.address : ''\r\n  );\r\n\r\n  const [displayAddress, setDisplayAddress] = useState(\r\n    userData && userData.address ? userData.address[0].value : ''\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    setDisplayAddress(event.target.value);\r\n  };\r\n\r\n  const random = Math.floor(1000 + Math.random() * 9000);\r\n\r\n  const handlePlaceOrder = () => {\r\n    db.collection('orders')\r\n      .doc(`SG-${random}`)\r\n      .set({\r\n        userID: currentUser.uid,\r\n        orderID: `SG-${random}`,\r\n\r\n        quantity: quant,\r\n        price: quant * props.price,\r\n\r\n        paymentType: paymentType,\r\n        orderStatus: 1,\r\n        remarks: remarks,\r\n        customerName: currentUser.displayName,\r\n        mobileNumber: userData.mobileNumber,\r\n        created: Date.now(),\r\n        addressValue: displayAddress,\r\n        OTP: Math.floor(1000 + Math.random() * 9000)\r\n      })\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n        props.closeOrder();\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n  };\r\n\r\n  const [openNewAddress, setOpenNewAddress] = useState(false);\r\n\r\n  const handleClickOpenNewAddress = () => {\r\n    setOpenNewAddress(true);\r\n  };\r\n\r\n  const handleCloseNewAddress = () => {\r\n    setOpenNewAddress(false);\r\n  };\r\n\r\n  const handleAddNewAddress = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newAddressArray;\r\n\r\n    if (userData.address) {\r\n      newAddressArray = [\r\n        ...userData.address,\r\n        {\r\n          id: uuidv4(),\r\n          tag: newTag,\r\n          value: newAddress\r\n        }\r\n      ];\r\n    } else {\r\n      newAddressArray = [{ id: uuidv4(), tag: newTag, value: newAddress }];\r\n    }\r\n\r\n    setUserAddress(newAddressArray);\r\n\r\n    setDisplayAddress(newAddressArray[newAddressArray.length - 1].value);\r\n    let newUserData = {\r\n      ...userData,\r\n      address: newAddressArray\r\n    };\r\n    setUserData(newUserData);\r\n\r\n    userRef\r\n      .set(newUserData)\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n\r\n    console.log(newUserData);\r\n    setOpenNewAddress(false);\r\n  };\r\n\r\n  const handleQuant = (value) => {\r\n    console.log(\r\n      value,\r\n      props.minQuantity,\r\n      Number(value) < Number(props.minQuantity)\r\n    );\r\n    setQuant(value);\r\n    if (Number(value) < Number(props.minQuantity)) {\r\n      setErrors([`Minimum order quantity is ${props.minQuantity} litres`]);\r\n    }\r\n\r\n    if (Number(value) >= Number(props.minQuantity)) {\r\n      if (Number(value) * props.price > 10000) {\r\n        setErrors([`Credit Limit Exceeded`]);\r\n      }\r\n      if (Number(value) * props.price <= 10000) {\r\n        setErrors([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-start\"\r\n              >\r\n                <Box flexDirection=\"column\">\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    {/* {`SG-${random}`} */}\r\n                  </Typography>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    {currentUser && currentUser.displayName}\r\n                  </Typography>\r\n\r\n                  <Typography color=\"primary\" variant=\"h6\">\r\n                    {userData && userData.mobileNumber}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"caption\">\r\n                {''}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" variant=\"h4\">\r\n                {displayAddress}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <FormControl className={classes.formControl} width={1}>\r\n                {userData && userData.address && (\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    /* defaultValue={displayAddress} */\r\n                    onChange={handleChange}\r\n                    placeholder={displayAddress}\r\n                  >\r\n                    {userAddress.map((item) => {\r\n                      return (\r\n                        <MenuItem key={item.tag} value={item.value}>\r\n                          {item.tag}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n\r\n                <FormHelperText>Select Address</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item></Grid>\r\n            <Grid item>\r\n              <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n                <FormControl className={classes.formControl}>\r\n                  <Fab\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"add\"\r\n                    onClick={handleClickOpenNewAddress}\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                  <FormHelperText>Add new address</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  autoFocus\r\n                  id=\"quantitySelect\"\r\n                  label=\"Qty\"\r\n                  onChange={(e) => handleQuant(e.target.value)}\r\n                  type=\"number\"\r\n                  min={props.minQuantity}\r\n                  defaultValue={props.minQuantity}\r\n                />\r\n                <FormHelperText>Choose Quantity</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Date picker dialog\"\r\n                  format=\"MM/dd/yyyy\"\r\n                  value={selectedDate}\r\n                   onChange={handleDateChange} \r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date'\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  autoFocus\r\n                  id=\"price\"\r\n                  label=\"Price\"\r\n                  type=\"text\"\r\n                  value={quant * props.price}\r\n                  InputProps={{\r\n                    readOnly: true\r\n                  }}\r\n                />\r\n\r\n                <FormHelperText>Calculated Price</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  defaultValue={1}\r\n                  onChange={(e) => setPaymentType(e.target.value)}\r\n                >\r\n                  <MenuItem value={1}>Cash</MenuItem>\r\n                  <MenuItem value={2}>Credit</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Choose Payment Option</FormHelperText>\r\n              </FormControl>\r\n            </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          autoFocus\r\n          fullWidth\r\n          margin=\"dense\"\r\n          id=\"remarks\"\r\n          label=\"Remarks\"\r\n          type=\"text\"\r\n          onChange={(e) => setRemarks(e.target.value)}\r\n          placeholder=\"Place order for a later date | Provide delivery instructions\"\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <Typography color=\"textSecondary\" variant=\"caption\">\r\n          *Actual Price will depend on the actual quantity of the fuel\r\n          Delivered.\r\n        </Typography>\r\n        <br></br>\r\n        <Typography color=\"textSecondary\" variant=\"caption\">\r\n          **Fuel price is dependant on the day's pricing\r\n        </Typography>\r\n        <div>\r\n          <Dialog\r\n            disableBackdropClick\r\n            open={openNewAddress}\r\n            onClose={handleCloseNewAddress}\r\n          >\r\n            <DialogTitle>Add New Address</DialogTitle>\r\n            <DialogContent>\r\n              <form className={classes.container}>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"New Tag\"\r\n                    margin=\"normal\"\r\n                    name=\"addressTag\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setnewTag(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"New Address\"\r\n                    margin=\"normal\"\r\n                    name=\"address\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setnewAddress(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseNewAddress} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleAddNewAddress} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </DialogContent>\r\n      {errors && errors.length > 0 && <Alert severity=\"error\">{errors}</Alert>}\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handlePlaceOrder}\r\n          color=\"primary\"\r\n          disabled={errors.length !== 0}\r\n        >\r\n          Place Order\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OrderDialog from '../../dialog/OrderDialog';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { db } from '../../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst monthNames = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'Aug',\r\n  'Sept',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec'\r\n];\r\n\r\nconst Budget = (props) => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n\r\n  let today = new Date().toISOString().slice(0, 10).split('-')[2];\r\n\r\n  const [userData, setUserData] = useState(props.userData);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, []);\r\n\r\n  const [openOrder, setOpenOrder] = useState(false);\r\n\r\n  const [priceModal, setPriceModal] = useState(false);\r\n  const [price, setPrice] = useState(props.price);\r\n\r\n  const handleClickOrderOpen = () => {\r\n    setOpenOrder(true);\r\n  };\r\n\r\n  const handleCloseOrder = () => {\r\n    setOpenOrder(false);\r\n  };\r\n\r\n  const handlePriceModalOpen = () => {\r\n    setPriceModal(true);\r\n  };\r\n\r\n  const handleClosePriceModal = () => {\r\n    setPriceModal(false);\r\n  };\r\n\r\n  const handleAddNewPrice = (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      db.collection('priceForTheDay')\r\n        .doc('e8kgvrn1XGzqM4JYAG3X')\r\n        .update({ price: parseInt(price), lastUpdated: Date.now() })\r\n        .then(function () {\r\n          console.log('Document successfully written!');\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n    handleClosePriceModal();\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {userData && userData.isCustomer && (\r\n        <div>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={3}>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n                  Today's Price\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"h3\">\r\n                  {props.price}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Box\r\n                mt={4}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                paddingRight={2}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  /* disabled={} */\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  onClick={handleClickOrderOpen}\r\n                >\r\n                  Order Now\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n            <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                <i className=\"fas fa-rupee-sign\"></i> / Litre\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n\r\n          <div>\r\n            {openOrder && (\r\n              <Dialog\r\n                open={openOrder}\r\n                onClose={handleCloseOrder}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n              >\r\n                <OrderDialog\r\n                  price={props.price}\r\n                  userData={props.userData}\r\n                  minQuantity={props.minQuantity}\r\n                  closeOrder={handleCloseOrder}\r\n                ></OrderDialog>\r\n              </Dialog>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {userData && userData.isOwner && (\r\n        <div>\r\n          <CardContent>\r\n            {console.log(props)}\r\n            <Grid container justify=\"space-between\" spacing={3}>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n                  Selling price today\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" variant=\"h3\">\r\n                  {props.price}\r\n                  {'  '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    <i className=\"fas fa-rupee-sign\"></i> / Litre\r\n                  </Typography>\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  style={\r\n                    new Date(props.lastUpdated)\r\n                      .toISOString()\r\n                      .slice(0, 10)\r\n                      .split('-')[2] !== today\r\n                      ? {\r\n                          color: 'red'\r\n                        }\r\n                      : {\r\n                          color: 'black'\r\n                        }\r\n                  }\r\n                >\r\n                  Last Updated :{' '}\r\n                  {\r\n                    new Date(props.lastUpdated)\r\n                      .toISOString()\r\n                      .slice(0, 10)\r\n                      .split('-')[2]\r\n                  }{' '}\r\n                  {monthNames[new Date(props.lastUpdated).getMonth()]}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                paddingRight={2}\r\n              >\r\n                <Button\r\n                  color=\"primary\"\r\n                  /* disabled={} */\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  onClick={handlePriceModalOpen}\r\n                >\r\n                  Set Price\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </CardContent>\r\n\r\n          <div>\r\n            {priceModal && (\r\n              <div>\r\n                <Dialog\r\n                  open={priceModal}\r\n                  onClose={handleCloseOrder}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                  fullWidth={true}\r\n                  maxWidth={'sm'}\r\n                >\r\n                  <DialogTitle>Set Price</DialogTitle>\r\n                  <DialogContent>\r\n                    <form className={classes.container}>\r\n                      <FormControl className={classes.formControl}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label=\"Price\"\r\n                          margin=\"normal\"\r\n                          name=\"price\"\r\n                          variant=\"outlined\"\r\n                          required\r\n                          defaultValue={props.price}\r\n                          onChange={(e) => setPrice(e.target.value)}\r\n                        />\r\n                      </FormControl>\r\n                    </form>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClosePriceModal} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddNewPrice} color=\"primary\">\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n  Container,\r\n  Menu,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestOrders = (props) => {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [row, setRow] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event, params) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setRow(params.row);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updatedOrders = [];\r\n\r\n    updatedOrders.push(\r\n      ...props.orders.map((order) => {\r\n        order['id'] = order.orderID;\r\n\r\n        order['quantity'] =\r\n          order.orderStatus !== 1 ? order.deliveredQuantity : order.quantity;\r\n        order['completed'] = order.delivered\r\n          ? order.delivered\r\n          : order.cancelled;\r\n\r\n        return order;\r\n      })\r\n    );\r\n\r\n    setOrders(updatedOrders);\r\n  }, []);\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  const handleOrderDetails = (params) => {\r\n    console.log(params.row);\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'orderID', headerName: 'Order Ref', width: 120 },\r\n    { field: 'customerName', headerName: 'Customer name', width: 160 },\r\n    { field: 'addressValue', headerName: 'Location', width: 180 },\r\n    {\r\n      field: 'created',\r\n      headerName: 'Date Ordered',\r\n      type: 'date',\r\n      width: 160,\r\n      renderCell: (params) => moment(params.value).format('DD/MM/YYYY HH:mm')\r\n    },\r\n    {\r\n      field: 'completed',\r\n      headerName: 'Date Completed',\r\n      type: 'date',\r\n      width: 160,\r\n      renderCell: (params) =>\r\n        params.value ? moment(params.value).format('DD/MM/YYYY HH:mm') : ''\r\n    },\r\n\r\n    {\r\n      field: 'paymentType',\r\n      headerName: 'Payment Method',\r\n      renderCell: (params) => (params.value === 1 ? 'Cash' : 'Credit'),\r\n      width: 180\r\n    },\r\n    {\r\n      field: 'quantity',\r\n      headerName: 'Quantity(Ltrs)',\r\n\r\n      width: 150\r\n    },\r\n    {\r\n      field: 'price',\r\n      headerName: 'Amount(Rs)',\r\n\r\n      width: 140\r\n    },\r\n    {\r\n      field: 'orderStatus',\r\n      headerName: 'Status',\r\n\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          style={\r\n            params.value === 1\r\n              ? {\r\n                  backgroundColor: 'orange',\r\n                  color: 'white'\r\n                }\r\n              : params.value === 2\r\n              ? {\r\n                  backgroundColor: 'green',\r\n                  color: 'white'\r\n                }\r\n              : {\r\n                  backgroundColor: 'red',\r\n                  color: 'white'\r\n                }\r\n          }\r\n          label={\r\n            params.value === 1\r\n              ? 'Pending'\r\n              : params.value === 2\r\n              ? 'Fulfilled'\r\n              : 'Cancelled'\r\n          }\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      sortable: false,\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <MoreHorizIcon\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onMouseOver={(e) => changeOnHover(e)}\r\n          onClick={(e) => handleClick(e, params)}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {orders && orders.length !== 0 && (\r\n        <Container style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={orders} columns={columns} pageSize={10} />\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>View Order details</MenuItem>\r\n            {row.orderStatus === 2 && (\r\n              <MenuItem onClick={() => console.log(row)}>View Invoice</MenuItem>\r\n            )}\r\n            {row.orderStatus === 2 && (\r\n              <MenuItem onClick={handleClose}>Download Invoice</MenuItem>\r\n            )}\r\n          </Menu>\r\n        </Container>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst CustomerList = (props) => {\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  const [row, setRow] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event, params) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setRow(params.row);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props.users);\r\n    const updatedUsers = [];\r\n\r\n    updatedUsers.push(\r\n      ...props.users.map((user) => {\r\n        return user;\r\n      })\r\n    );\r\n\r\n    setUsers(updatedUsers);\r\n  }, []);\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'customerName', headerName: 'Name', width: 130 },\r\n    {\r\n      field: 'mobileNumber',\r\n      headerName: 'Phone/Email',\r\n      width: 170,\r\n\r\n      renderCell: (params) => (\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n            {params.row.mobileNumber}\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n            {params.row.email}\r\n          </Typography>\r\n        </Grid>\r\n      )\r\n    },\r\n    {\r\n      field: 'addressValue',\r\n      headerName: 'Address',\r\n      width: 180,\r\n      renderCell: (params) => params.row.address && params.row.address[0].value\r\n    },\r\n    { field: 'creditLimit', headerName: 'Credit Limit', width: 180 },\r\n    {\r\n      field: 'totalOrders',\r\n      headerName: 'Total Orders',\r\n      width: 180,\r\n      renderCell: (params) =>\r\n        props.orders.filter((order) => order.userID === params.row.id).length\r\n    },\r\n    {\r\n      field: 'orderValue',\r\n      headerName: 'Order Value',\r\n      width: 180,\r\n      renderCell: (params) =>\r\n        props.orders\r\n          .filter((order) => order.userID === params.row.id)\r\n          .map((order) => Number(order.price))\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString()\r\n    },\r\n    { field: 'created', headerName: 'Customer Since', width: 180 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Action',\r\n      sortable: false,\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <MoreHorizIcon\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onMouseOver={(e) => changeOnHover(e)}\r\n          onClick={(e) => handleClick(e, params)}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {users && users.length !== 0 && (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid rows={users} columns={columns} pageSize={10} />\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={() => console.log(row)}>\r\n              Edit User details\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nCustomerList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CustomerList;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem\r\n            divider={i < products.length - 1}\r\n            key={product.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              size=\"small\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Chip,\r\n  TextField,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { db } from '../../../firebase';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\nimport { ChildCareSharp } from '@material-ui/icons';\r\nimport { ButtonGroup } from 'react-bootstrap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    minWidth: 275\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)'\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [validationState, setValidationState] = useState(1);\r\n  const [actualQuant, setActualQuant] = useState(0);\r\n  const [deliveryCharge, setDeliveryCharge] = useState(0);\r\n  const [actualAmount, setActualAmount] = useState(0);\r\n  const [otp, setOTP] = useState();\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  const [openFailed, setOpenFailed] = useState(false);\r\n  const [openCancelRemark, setOpenCancelRemark] = useState(false);\r\n  const [cancelRemark, setCancelRemark] = useState('');\r\n  const { currentUser } = useAuth();\r\n\r\n  function verifyOTP(orderOTP) {\r\n    if (orderOTP && otp == orderOTP) {\r\n      setValidationState(3);\r\n\r\n      setOTP();\r\n    } else {\r\n      setOpenFailed(true);\r\n      setValidationState(1);\r\n      setOTP();\r\n      console.log('OTP verification failed');\r\n    }\r\n  }\r\n  function handleCompleteOrder(actualQuant, deliveryCharge, orderID) {\r\n    let finalPrice;\r\n\r\n    actualQuant &&\r\n      deliveryCharge &&\r\n      (finalPrice =\r\n        Number(actualQuant) * Number(props.price) + Number(deliveryCharge));\r\n    db.collection('orders')\r\n      .doc(orderID)\r\n      .update({\r\n        orderStatus: 2,\r\n        delivered: Date.now(),\r\n        price: Number(finalPrice),\r\n        deliveredQuantity: Number(actualQuant),\r\n        deliveryCharge: Number(deliveryCharge)\r\n      })\r\n      .then(function () {\r\n        setOpenSuccess(true);\r\n        console.log('Document successfully written!');\r\n        setValidationState(1);\r\n        setOTP();\r\n      })\r\n      .catch(function (error) {\r\n        setOpenFailed(true);\r\n        console.error('Error writing document: ', error);\r\n        setValidationState(1);\r\n        setOTP();\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      setOpenSuccess(false);\r\n    }, 2000); //2 Second delay\r\n  }, [openSuccess]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(function () {\r\n      setOpenFailed(false);\r\n    }, 2000); //2 Second delay\r\n  }, [openFailed]);\r\n\r\n  const handleOpenCancelOrderRemark = () => {\r\n    setOpenCancelRemark(true);\r\n  };\r\n\r\n  const handleCloseCancelOrderRemark = () => {\r\n    setOpenCancelRemark(false);\r\n  };\r\n\r\n  function changeOnHover(e) {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  function handleCancelOrder(e, orderID, cancelledBy) {\r\n    e.preventDefault();\r\n\r\n    db.collection('orders')\r\n      .doc(orderID)\r\n      .update({\r\n        orderStatus: 3,\r\n        cancelled: Date.now(),\r\n        cancelledBy: cancelledBy,\r\n        cancelRemark: cancelRemark\r\n      })\r\n      .then(function () {\r\n        props.openNotification();\r\n        console.log('Document successfully written!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n\r\n    handleCloseCancelOrderRemark();\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      {props.userdata && props.userdata.isCustomer && (\r\n        <div>\r\n          <Dialog\r\n            open={openCancelRemark}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            onClose={handleCloseCancelOrderRemark}\r\n          >\r\n            <DialogTitle>Add Remarks</DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                className={classes.container}\r\n                onSubmit={(e) =>\r\n                  handleCancelOrder(e, props.order.orderID, 'Customer')\r\n                }\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Remarks\"\r\n                    margin=\"normal\"\r\n                    name=\"cancelRemarks\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setCancelRemark(e.target.value)}\r\n                  />\r\n\r\n                  <DialogActions>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) => handleCloseCancelOrderRemark()}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) =>\r\n                        handleCancelOrder(e, props.order.orderID, 'Customer')\r\n                      }\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={1}>\r\n              <Grid container justify=\"space-between\" spacing={6}>\r\n                <Grid item>\r\n                  <Typography color=\"textSecondary\" variant=\"h3\">\r\n                    Current Order\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    {props.order.orderID}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* <CancelIcon\r\n                    onMouseOver={(e) => changeOnHover(e)}\r\n                    onClick={(e) => handleOpenCancelOrderRemark()}\r\n                  /> */}\r\n                  <Chip\r\n                    color=\"secondary\"\r\n                    onMouseOver={(e) => changeOnHover(e)}\r\n                    label=\"Cancel\"\r\n                    onClick={(e) => handleOpenCancelOrderRemark()}\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={4}>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.quantity}{' '}\r\n                      <Typography color=\"textSecondary\" variant=\"caption\">\r\n                        Liters\r\n                      </Typography>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                      {props.order.price}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={8}>\r\n                  <Grid item>\r\n                    <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n                  </Grid>\r\n                  <Grid item alignItems=\"center\">\r\n                    <Typography color=\"textSecondary\" variant=\"caption\">\r\n                      {`OTP : ${props.order.OTP}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </div>\r\n      )}\r\n      {props.userdata && props.userdata.isDriver && (\r\n        <div>\r\n          <Dialog\r\n            open={openCancelRemark}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            onClose={handleCloseCancelOrderRemark}\r\n          >\r\n            <DialogTitle>Add Remarks</DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                className={classes.container}\r\n                onSubmit={(e) =>\r\n                  handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                }\r\n              >\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Remarks\"\r\n                    margin=\"normal\"\r\n                    name=\"cancelRemarks\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setCancelRemark(e.target.value)}\r\n                  />\r\n\r\n                  <DialogActions>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) => handleCloseCancelOrderRemark()}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onMouseOver={(e) => changeOnHover(e)}\r\n                      onClick={(e) =>\r\n                        handleCancelOrder(e, props.order.orderID, 'Driver')\r\n                      }\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  </DialogActions>\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n          <Dialog\r\n            open={openSuccess}\r\n            /*  onClose={this.handleClose} */\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            disableBackdropClick\r\n          >\r\n            <Alert severity=\"success\">\r\n              <AlertTitle>Success</AlertTitle>\r\n              <strong>Order Completed!!</strong>\r\n            </Alert>\r\n          </Dialog>\r\n          <Dialog\r\n            open={openFailed}\r\n            /*  onClose={this.handleClose} */\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            disableBackdropClick\r\n          >\r\n            <Alert severity=\"error\">\r\n              <AlertTitle>Failed</AlertTitle>\r\n              <strong>Incorrect OTP!!</strong>\r\n            </Alert>\r\n          </Dialog>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={6}>\r\n              <Grid item>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  {props.order.orderID}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <Chip\r\n                  style={{\r\n                    backgroundColor: 'gray',\r\n                    color: 'white'\r\n                  }}\r\n                  onMouseOver={(e) => changeOnHover(e)}\r\n                  label=\"Cancel\"\r\n                  onClick={(e) => handleOpenCancelOrderRemark()}\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {props.order.customerName}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              {props.order.mobileNumber}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.pos} component=\"p\">\r\n              {props.order.addressValue}\r\n            </Typography>\r\n            <Grid container justify=\"space-between\" className={classes.pos}>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.quantity}{' '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    Liters\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                  {props.order.price}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {validationState === 1 && (\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => setValidationState(2)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Enter OTP\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {validationState === 2 && (\r\n              <Grid\r\n                container=\"true\"\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                spacing={1}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"otp\"\r\n                    label=\"OTP\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => setOTP(e.target.value)}\r\n                    style={{ width: '50%' }}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => verifyOTP(props.order.OTP)}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Verify OTP\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            {validationState === 3 && (\r\n              <Grid container justify=\"space-between\" spacing={2}>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"actualQuantity\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => setActualQuant(e.target.value)}\r\n\r\n                    /* style={{ width: '25%' }} */\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    name=\"deliveryCharge\"\r\n                    label=\"DeliveryCharge\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onChange={(e) => setDeliveryCharge(e.target.value)}\r\n                    notched=\"true\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() =>\r\n                      handleCompleteOrder(\r\n                        actualQuant,\r\n                        deliveryCharge,\r\n                        props.order.orderID\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                  >\r\n                    Complete Order\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n            <br></br>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                {props.order.remarks}\r\n              </Typography>\r\n            </Grid>\r\n          </CardContent>\r\n          {/* <Grid container justify=\"space-between\" spacing={1}>\r\n              <Grid item>\r\n                <Typography color=\"textSecondary\" variant=\"h3\">\r\n                  Current Order\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                  {props.order.orderID}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={6}>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.quantity}{' '}\r\n                      <Typography color=\"textSecondary\" variant=\"caption\">\r\n                        Liters\r\n                      </Typography>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                      {props.order.price}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography color=\"textPrimary\" variant=\"h4\">\r\n                      {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid container justify=\"start\" spacing={8}>\r\n                <Grid item alignItems=\"center\">\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    {props.order.address}Address\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Grid container justify=\"center\" spacing={8}>\r\n                  <Grid item>\r\n                    <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n                  </Grid>\r\n                  <Grid item alignItems=\"center\">\r\n                    <Typography color=\"textSecondary\" variant=\"caption\">\r\n                      OTP : ####\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid> */}\r\n        </div>\r\n      )}\r\n      {props.userdata && props.userdata.isOwner && (\r\n        <div>\r\n          <CardContent>\r\n            <Grid container justify=\"space-between\" spacing={6}>\r\n              <Grid item>\r\n                <Typography\r\n                  className={classes.title}\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  {props.order.orderID}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {props.order.customerName}\r\n            </Typography>\r\n            <Typography className={classes.pos} color=\"textSecondary\">\r\n              {props.order.mobileNumber}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.pos} component=\"p\">\r\n              {props.order.addressValue}\r\n            </Typography>\r\n            <Grid container justify=\"space-between\" className={classes.pos}>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.quantity}{' '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    Liters\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                  {props.order.price}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {props.order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"textSecondary\" variant=\"caption\">\r\n                {props.order.remarks}\r\n              </Typography>\r\n            </Grid>\r\n          </CardContent>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, title, value, icon, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\r\n              {title}\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              {value}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>{icon}</Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  gridRoot: {\r\n    flexGrow: '1'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const cashPercent = Math.trunc(\r\n    (Number(props.cash) / Number(props.total)) * 100\r\n  );\r\n\r\n  const creditPercent = Math.trunc(\r\n    (Number(props.credit) / Number(props.total)) * 100\r\n  );\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [cashPercent, creditPercent],\r\n        backgroundColor: [colors.green[500], colors.orange[600]],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Cash', 'Credit']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Cash',\r\n      value: cashPercent,\r\n      icon: MoneyIcon,\r\n      color: colors.green[500]\r\n    },\r\n    {\r\n      title: 'Credit',\r\n      value: creditPercent,\r\n      icon: CreditCardIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      <CardHeader title=\"Monthly Earning\" />\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item>\r\n            <Typography color=\"textPrimary\" variant=\"body1\">\r\n              This Month\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"body1\">\r\n              <strong>{props.total.toLocaleString()}</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Box /* height={300} */ position=\"relative\">\r\n              <Doughnut data={data} options={options} />\r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"center\" mt={2}>\r\n              {devices.map(({ color, icon: Icon, title, value }) => (\r\n                <Box key={title} p={1} textAlign=\"center\">\r\n                  <Icon color=\"action\" />\r\n                  <Typography color=\"textPrimary\" variant=\"body1\">\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography style={{ color }} variant=\"h2\">\r\n                    {value}%\r\n                  </Typography>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Box display=\"flex\" ml={2}>\r\n        <Typography color=\"primary\" variant=\"caption\">\r\n          Total value of Earnings for the month of {props.month} 2020 in Rupees\r\n        </Typography>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  AppBar,\r\n  Toolbar,\r\n  Paper\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Page from 'src/components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport CustomerList from './CustomerList';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\nimport Loading from '../../../state/Loading';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { db } from '../../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  tab: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(true);\r\n  const [price, setPrice] = useState(92);\r\n  const [lastUpdated, setLastUpdated] = useState();\r\n  const [minQuantity, setMinQuantity] = useState(0);\r\n  const [startingStock, setStartingStock] = useState(0);\r\n  const [maxFutureDay, setMaxFutureDay] = useState(0);\r\n  const { currentUser } = useAuth();\r\n  const [orders, setOrders] = useState([]);\r\n  const [allOrders, setAllOrders] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [orderHistory, setOrderHistory] = useState([]);\r\n  const [allOrderHistory, setAllOrderHistory] = useState([]);\r\n  const [openNotification, setOpenNotification] = useState(false);\r\n  let currentOrderRef;\r\n  let currentPriceRef;\r\n  let allOrderRef;\r\n  let orderHistoryRef;\r\n  let allOrderHistoryRef;\r\n\r\n  const [value, setValue] = useState(0);\r\n  const [orderPageValue, setOrderPageValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleOrderPageChange = (event, newValue) => {\r\n    setOrderPageValue(newValue);\r\n  };\r\n\r\n  let today = new Date().toISOString().slice(0, 10);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n  };\r\n\r\n  {\r\n    currentUser &&\r\n      currentUser.uid &&\r\n      (currentOrderRef = db\r\n        .collection('orders')\r\n        .where('userID', '==', currentUser.uid)\r\n        .where('orderStatus', '==', 1));\r\n\r\n    currentPriceRef = db\r\n      .collection('priceForTheDay')\r\n      .doc('e8kgvrn1XGzqM4JYAG3X');\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await currentOrderRef.get();\r\n\r\n        let initialOrders = [];\r\n        data.forEach(function (doc) {\r\n          initialOrders.push(doc.data());\r\n        });\r\n\r\n        setOrders(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return currentOrderRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            updatedOrders.push(doc.data());\r\n          });\r\n        }\r\n        setOrders(updatedOrders);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return db.collection('users').onSnapshot(function (data) {\r\n        let userDataList = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            userDataList.push({\r\n              ...doc.data(),\r\n              id: doc.Df.key.path.segments[6]\r\n            });\r\n          });\r\n        }\r\n        setAllUsers(userDataList);\r\n      });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return currentPriceRef.onSnapshot(function (doc) {\r\n        if (doc) {\r\n          doc.data() && setPrice(doc.data().price);\r\n          doc.data() && setMinQuantity(doc.data().minQuantity);\r\n          doc.data() && setStartingStock(doc.data().startingStock);\r\n          doc.data() && setMaxFutureDay(doc.data().maxFutureDay);\r\n          doc.data() && setLastUpdated(doc.data().lastUpdated);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    currentUser &&\r\n      (orderHistoryRef = db\r\n        .collection('orders')\r\n        .where('userID', '==', currentUser.uid));\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await orderHistoryRef.get();\r\n\r\n        let initialOrders = [];\r\n        data.forEach(function (doc) {\r\n          if (doc.data().orderStatus !== 1) {\r\n            initialOrders.push(doc.data());\r\n          }\r\n        });\r\n\r\n        setOrderHistory(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return orderHistoryRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            if (doc.data().orderStatus !== 1) {\r\n              updatedOrders.push(doc.data());\r\n            }\r\n          });\r\n        }\r\n        setOrderHistory(updatedOrders);\r\n      });\r\n    }, []);\r\n\r\n    allOrderRef = db.collection('orders').where('orderStatus', '==', 1);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await allOrderRef.get();\r\n        let initialOrders = [];\r\n\r\n        data.forEach(function (doc) {\r\n          initialOrders.push(doc.data());\r\n        });\r\n\r\n        setAllOrders(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return allOrderRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            updatedOrders.push(doc.data());\r\n          });\r\n        }\r\n        setAllOrders(updatedOrders);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  currentUser &&\r\n    currentUser.uid &&\r\n    (allOrderHistoryRef = db.collection('orders'));\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await allOrderHistoryRef.get();\r\n      let initialOrders = [];\r\n\r\n      data.forEach(function (doc) {\r\n        initialOrders.push(doc.data());\r\n      });\r\n\r\n      setAllOrderHistory(initialOrders);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return allOrderHistoryRef.onSnapshot(function (data) {\r\n      let updatedOrders = [];\r\n      if (data) {\r\n        data.forEach(function (doc) {\r\n          updatedOrders.push(doc.data());\r\n        });\r\n      }\r\n      setAllOrderHistory(updatedOrders);\r\n    });\r\n  }, []);\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .onSnapshot(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleOpenNotification = () => {\r\n    setOpenNotification(true);\r\n  };\r\n\r\n  const showCurrentOrder = (order) => {\r\n    return (\r\n      <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n        <TotalCustomers\r\n          order={order}\r\n          userdata={userData}\r\n          price={price}\r\n          openNotification={handleOpenNotification}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const date = new Date();\r\n  const month = new Date().toLocaleString('default', { month: 'long' });\r\n\r\n  const getCompletedOrdersToday = () => {\r\n    let completedOrders = allOrderHistory\r\n      .filter((order) => order.orderStatus === 2)\r\n      .filter(\r\n        (order) =>\r\n          order.delivered &&\r\n          moment(order.delivered).format('DD/MM/YYYY') ===\r\n            moment(date).format('DD/MM/YYYY')\r\n      );\r\n\r\n    return completedOrders.length;\r\n  };\r\n\r\n  const getPendingOrders = () => {\r\n    let pendingOrders = allOrderHistory.filter(\r\n      (order) => order.orderStatus === 1\r\n    );\r\n\r\n    return pendingOrders.length;\r\n  };\r\n\r\n  const getThisMonthOrders = () => {\r\n    let thisMonthOrders = allOrderHistory\r\n      .filter((order) => order.orderStatus === 2)\r\n      .filter(\r\n        (order) =>\r\n          order.delivered && moment(order.delivered).format('MM') === '02' //moment(date).format('MM')\r\n      );\r\n    console.log(thisMonthOrders);\r\n    let thisMonthOrderValues = [];\r\n    let thisMonthCashOrderValues = [];\r\n    let thisMonthCreditOrderValues = [];\r\n    thisMonthOrders.forEach(\r\n      (order) => order.price && thisMonthOrderValues.push(Number(order.price))\r\n    );\r\n    console.log(thisMonthOrderValues);\r\n\r\n    thisMonthOrders\r\n      .filter((order) => order.paymentType === 1)\r\n      .forEach(\r\n        (order) =>\r\n          order.price && thisMonthCashOrderValues.push(Number(order.price))\r\n      );\r\n\r\n    thisMonthOrders\r\n      .filter((order) => order.paymentType === 2)\r\n      .forEach(\r\n        (order) =>\r\n          order.price && thisMonthCreditOrderValues.push(Number(order.price))\r\n      );\r\n\r\n    let total, cash, credit;\r\n    total =\r\n      thisMonthOrderValues.length > 0\r\n        ? thisMonthOrderValues.length === 1\r\n          ? thisMonthOrderValues[0]\r\n          : thisMonthOrderValues.reduce((a, b) => a + b, 0)\r\n        : 0;\r\n\r\n    cash =\r\n      thisMonthCashOrderValues.length > 0\r\n        ? thisMonthCashOrderValues.length === 1\r\n          ? thisMonthCashOrderValues[0]\r\n          : thisMonthCashOrderValues.reduce((a, b) => a + b, 0)\r\n        : 0;\r\n\r\n    credit =\r\n      thisMonthCreditOrderValues.length > 0\r\n        ? thisMonthCreditOrderValues.length === 1\r\n          ? thisMonthCreditOrderValues[0]\r\n          : thisMonthCreditOrderValues.reduce((a, b) => a + b, 0)\r\n        : 0;\r\n    return {\r\n      total,\r\n      cash,\r\n      credit\r\n    };\r\n  };\r\n\r\n  const reports = [\r\n    {\r\n      title: 'Orders to be fulfilled',\r\n      value: getPendingOrders(),\r\n      icon: <SystemUpdateAltIcon />\r\n    },\r\n    {\r\n      title: 'Completed Orders Today',\r\n      value: getCompletedOrdersToday(),\r\n      icon: <LocalOfferIcon />\r\n    },\r\n    {\r\n      title: 'Cash Sales Today',\r\n      value: getThisMonthOrders().cash.toLocaleString(),\r\n      icon: <SystemUpdateAltIcon />\r\n    },\r\n    {\r\n      title: 'Credit Sales Today',\r\n      value: getThisMonthOrders().credit.toLocaleString(),\r\n      icon: <LocalOfferIcon />\r\n    },\r\n    {\r\n      title: `${month} Orders`,\r\n      value: getThisMonthOrders().total.toLocaleString(),\r\n      icon: <InsertDriveFileIcon />\r\n    },\r\n    {\r\n      title: `Opening Stock`,\r\n      value: startingStock,\r\n      icon: <InvertColorsIcon />\r\n    },\r\n    {\r\n      title: `Available Stock`,\r\n      value: '8,773 Ltrs',\r\n      icon: <InvertColorsIcon />\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {userData && userData.isOwner !== undefined && (\r\n        <div>\r\n          <Paper color={'white'} maxWidth={true}>\r\n            <Tabs\r\n              aria-label=\"ownerNavigationTabs\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            >\r\n              <Tab\r\n                label={\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n                      height: '10px'\r\n                    }}\r\n                  >\r\n                    <HomeIcon p={2} fontSize=\"small\" />{' '}\r\n                    <p style={{ paddingLeft: '10px' }}>Home</p>\r\n                  </div>\r\n                }\r\n              />\r\n              <Tab\r\n                label={\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n\r\n                      height: '10px'\r\n                    }}\r\n                  >\r\n                    <ShoppingCartIcon p={2} fontSize=\"small\" />{' '}\r\n                    <p style={{ paddingLeft: '10px' }}>Orders</p>\r\n                  </div>\r\n                }\r\n              />\r\n              <Tab\r\n                label={\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'row',\r\n                      alignItems: 'center',\r\n\r\n                      height: '10px'\r\n                    }}\r\n                  >\r\n                    <SupervisedUserCircleIcon p={2} fontSize=\"small\" />{' '}\r\n                    <p style={{ paddingLeft: '10px' }}>Customers</p>\r\n                  </div>\r\n                }\r\n              />\r\n            </Tabs>\r\n          </Paper>\r\n        </div>\r\n      )}\r\n      <Page className={classes.root} title=\"Dashboard\">\r\n        {loading && <Loading />}\r\n\r\n        <Container maxWidth={false}>\r\n          {userData && userData.isCustomer && (\r\n            <div>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Welcome {currentUser && currentUser.displayName}\r\n              </Typography>\r\n\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                  <Budget\r\n                    price={price}\r\n                    userData={userData}\r\n                    minQuantity={minQuantity}\r\n                    startingStock={startingStock}\r\n                    maxFutureDay={maxFutureDay}\r\n                  />\r\n                </Grid>\r\n                {orders.map((order) => {\r\n                  return showCurrentOrder(order);\r\n                })}\r\n\r\n                {orderHistory && orderHistory.length > 0 && (\r\n                  <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                    <div className={classes.tab}>\r\n                      <AppBar position=\"static\">\r\n                        <Tabs\r\n                          value={value}\r\n                          onChange={handleChange}\r\n                          aria-label=\"orderCreditHistoryTab\"\r\n                        >\r\n                          <Tab label=\"Order History\" />\r\n                          <Tab label=\"Credit History\" />\r\n                        </Tabs>\r\n                      </AppBar>\r\n                      <TabPanel value={value} index={0}>\r\n                        {orderHistory && orderHistory.length > 0 && (\r\n                          <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                            <LatestOrders\r\n                              orders={orderHistory}\r\n                              userdata={userData}\r\n                            />\r\n                          </Grid>\r\n                        )}\r\n                      </TabPanel>\r\n                      <TabPanel value={value} index={1}>\r\n                        Item Two\r\n                      </TabPanel>\r\n                    </div>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          {userData && userData.isDriver && (\r\n            <div>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Welcome {currentUser && currentUser.displayName}\r\n              </Typography>\r\n              <Grid container spacing={3}>\r\n                {allOrders.map((order) => {\r\n                  return showCurrentOrder(order);\r\n                })}\r\n\r\n                {allOrderHistory && allOrderHistory.length > 0 && (\r\n                  <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                    <LatestOrders\r\n                      orders={allOrderHistory}\r\n                      userdata={userData}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          {userData && userData.isOwner !== undefined && (\r\n            <div>\r\n              <TabPanel value={value} index={0}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs lg={4}>\r\n                    <TrafficByDevice\r\n                      month={month}\r\n                      total={getThisMonthOrders().total}\r\n                      cash={getThisMonthOrders().cash}\r\n                      credit={getThisMonthOrders().credit}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Grid container spacing={3}>\r\n                      <Grid item lg={4} sm={6} xl={3} xs={12}>\r\n                        <Budget price={price} lastUpdated={lastUpdated} />\r\n                      </Grid>\r\n\r\n                      {reports.map((report) => {\r\n                        return (\r\n                          <Grid item lg={4} sm={6} xl={3} xs={12}>\r\n                            <TotalProfit\r\n                              title={report.title}\r\n                              value={report.value}\r\n                              icon={report.icon}\r\n                            />\r\n                          </Grid>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </Grid>\r\n                  {allOrderHistory && allOrderHistory.length > 0 && (\r\n                    <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                      <LatestOrders\r\n                        orders={allOrderHistory}\r\n                        userdata={userData}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                  <div className={classes.tab}>\r\n                    <AppBar position=\"static\">\r\n                      <Tabs\r\n                        value={orderPageValue}\r\n                        onChange={handleOrderPageChange}\r\n                        aria-label=\"orderPageTab\"\r\n                      >\r\n                        <Tab label=\"All Orders\" />\r\n                        <Tab label=\"Pending Orders\" />\r\n                      </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={orderPageValue} index={0}>\r\n                      {allOrderHistory && allOrderHistory.length > 0 && (\r\n                        <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                          <LatestOrders\r\n                            orders={allOrderHistory}\r\n                            userdata={userData}\r\n                          />\r\n                        </Grid>\r\n                      )}\r\n                    </TabPanel>\r\n                    <TabPanel value={orderPageValue} index={1}>\r\n                      {allOrders && allOrders.length > 0 ? (\r\n                        <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                          <LatestOrders\r\n                            orders={allOrders}\r\n                            userdata={userData}\r\n                          />\r\n                        </Grid>\r\n                      ) : (\r\n                        `No Pending Orders`\r\n                      )}\r\n                    </TabPanel>\r\n                  </div>\r\n                </Grid>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                {allUsers && allUsers.length > 0 && (\r\n                  <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                    <CustomerList users={allUsers} orders={allOrderHistory} />\r\n                  </Grid>\r\n                )}\r\n              </TabPanel>\r\n            </div>\r\n          )}\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            open={openNotification}\r\n            autoHideDuration={5000}\r\n            onClose={() => setOpenNotification(false)}\r\n            key=\"TransitionLeft\"\r\n          >\r\n            <Alert severity=\"error\">Order Cancelled!</Alert>\r\n          </Snackbar>\r\n        </Container>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/app/customers',\r\n    icon: UsersIcon,\r\n    title: 'Customers'\r\n  },\r\n  {\r\n    href: '/app/products',\r\n    icon: ShoppingBagIcon,\r\n    title: 'Products'\r\n  },\r\n  {\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: '/app/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  },\r\n  {\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'Login'\r\n  },\r\n  {\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: 'Register'\r\n  },\r\n  {\r\n    href: '/404',\r\n    icon: AlertCircleIcon,\r\n    title: 'Error'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map(item => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip,\r\n  Container\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function UpdateProfileDialog(props) {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n\r\n  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  }\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await userRef.get();\r\n\r\n      setUserData(data.data());\r\n      data.data() &&\r\n        data.data().address &&\r\n        setInputFields(\r\n          data.data().address.map((address) => {\r\n            return { id: address.id, tag: address.tag, value: address.value };\r\n          })\r\n        );\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [inputFields, setInputFields] = useState([\r\n    { id: uuidv4(), tag: '', value: '' }\r\n  ]);\r\n\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setfirstName] = useState(\r\n    currentUser.displayName.split(' ')[0]\r\n  );\r\n  const [lastName, setlastName] = useState(\r\n    currentUser.displayName.split(' ')[1]\r\n  );\r\n\r\n  const [mobileNumber, setmobileNumber] = useState();\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    console.log(inputFields, id, event);\r\n\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n        console.log(event.target.name, event.target.value);\r\n      }\r\n\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { id: uuidv4(), tag: '', value: '' }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    let values = [...inputFields];\r\n    /* values.pop(); */\r\n\r\n    values = values.filter((value) => value.id !== id);\r\n    console.log(\r\n      values,\r\n      values.filter((value) => value.id !== id)\r\n    );\r\n\r\n    setInputFields(values);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (firstName === '' || lastName === '') {\r\n      return setError('Name Cannot be empty');\r\n    }\r\n\r\n    if (mobileNumber && typeof mobileNumber !== 'undefined') {\r\n      let pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(mobileNumber)) {\r\n        return setError('Please enter only number');\r\n      } else if (mobileNumber.length !== 10) {\r\n        return setError('Please enter valid phone number');\r\n      }\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n\r\n      // Updates the user attributes:\r\n\r\n      currentUser\r\n        .updateProfile({\r\n          displayName: `${firstName} ${lastName}`\r\n        })\r\n        .then(\r\n          function () {\r\n            console.log('Name Updated');\r\n          },\r\n          function (error) {\r\n            setError(error);\r\n          }\r\n        );\r\n\r\n      let newUserData = {\r\n        ...userData,\r\n        mobileNumber: mobileNumber ? mobileNumber : userData.mobileNumber,\r\n        address: inputFields\r\n      };\r\n      console.log(newUserData);\r\n      return db\r\n        .collection('users')\r\n        .doc(currentUser.uid)\r\n        .set(newUserData)\r\n        .then(() => props.closeOrder());\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError('Failed to Update account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <DialogContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Box mb={3}>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Update your profile\r\n              </Typography>\r\n            </Box>\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            <form className={classes.root} noValidate>\r\n              <TextField\r\n                fullWidth\r\n                label=\"First Name\"\r\n                margin=\"normal\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={firstName}\r\n                onChange={(e) => setfirstName(e.target.value)}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last Name\"\r\n                margin=\"normal\"\r\n                name=\"LastName\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={lastName}\r\n                onChange={(e) => setlastName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mobile number\"\r\n                margin=\"normal\"\r\n                name=\"mobileNumber\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={props.userData && props.userData.mobileNumber}\r\n                onChange={(e) => setmobileNumber(e.target.value)}\r\n              />\r\n\r\n              {userData &&\r\n                userData.isCustomer &&\r\n                inputFields &&\r\n                inputFields.length > 0 &&\r\n                inputFields.map(\r\n                  (inputField) => (\r\n                    console.log(inputField),\r\n                    (\r\n                      <div key={inputField.id}>\r\n                        <TextField\r\n                          name=\"tag\"\r\n                          label=\"Tag\"\r\n                          variant=\"outlined\"\r\n                          /* size=\"small\" */\r\n                          style={{ width: '25%' }}\r\n                          defaultValue={inputField ? inputField.tag : ''}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                        <TextField\r\n                          name=\"value\"\r\n                          label=\"Value\"\r\n                          variant=\"outlined\"\r\n                          defaultValue={inputField ? inputField.value : ''}\r\n                          style={{ width: '48%' }}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                        <IconButton\r\n                          disabled={inputFields && inputFields.length === 1}\r\n                          onClick={() => handleRemoveFields(inputField.id)}\r\n                        >\r\n                          <RemoveIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={handleAddFields}>\r\n                          <AddIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    )\r\n                  )\r\n                )}\r\n            </form>\r\n          </Container>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleSubmit} color=\"primary\">\r\n          Update Profile\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function UserSettingsDialog(props) {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(props.price);\r\n  const [error, setError] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [minQuantity, setMinQuantity] = useState(0);\r\n  const [startingStock, setStartingStock] = useState(0);\r\n  const [maxFutureDay, setMaxFutureDay] = useState(0);\r\n  const [openSuccess, setOpenSuccess] = useState(false);\r\n\r\n  let currentPriceRef;\r\n\r\n  currentPriceRef = db.collection('priceForTheDay').doc('e8kgvrn1XGzqM4JYAG3X');\r\n\r\n  useEffect(() => {\r\n    return currentPriceRef.onSnapshot(function (doc) {\r\n      if (doc) {\r\n        console.log(doc.data());\r\n        doc.data() && setPrice(doc.data().price);\r\n        doc.data() && setMinQuantity(doc.data().minQuantity);\r\n        doc.data() && setStartingStock(doc.data().startingStock);\r\n        doc.data() && setMaxFutureDay(doc.data().maxFutureDay);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (name, value) => {\r\n    switch (name) {\r\n      case 'fuelPrice':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            fuelPrice: {\r\n              // object that we want to update\r\n\r\n              message: 'Price has to be a valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            fuelPrice: {\r\n              // object that we want to update\r\n              message: 'Price cannot be 0' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            fuelPrice: null\r\n          }));\r\n          setPrice(value);\r\n        }\r\n        break;\r\n      case 'startingStock':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            startingStock: {\r\n              // object that we want to update\r\n\r\n              message: 'Stock has to be a valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            startingStock: {\r\n              // object that we want to update\r\n              message: 'Stock cannot be 0' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            startingStock: null\r\n          }));\r\n          setStartingStock(value);\r\n        }\r\n        break;\r\n      case 'minQuantity':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            minQuantity: {\r\n              // object that we want to update\r\n\r\n              message: 'Quantity has to be a valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            minQuantity: {\r\n              // object that we want to update\r\n              message: 'Minimum Quantity cannot be 0' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            minQuantity: null\r\n          }));\r\n          setMinQuantity(value);\r\n        }\r\n        break;\r\n      case 'maxFutureDay':\r\n        if (isNaN(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            maxFutureDay: {\r\n              // object that we want to update\r\n\r\n              message: 'PLease provide valid number' // update the value of specific key\r\n            }\r\n          }));\r\n        }\r\n\r\n        if (!isNaN(value) && !!Number(value)) {\r\n          setError((prevError) => ({\r\n            ...prevError,\r\n            maxFutureDay: null\r\n          }));\r\n          setMaxFutureDay(value);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      db.collection('priceForTheDay')\r\n        .doc('e8kgvrn1XGzqM4JYAG3X')\r\n        .update({\r\n          price: parseInt(price),\r\n          lastUpdated: Date.now(),\r\n          minQuantity: minQuantity,\r\n          maxFutureDay: maxFutureDay,\r\n          startingStock: startingStock\r\n        })\r\n        .then(function () {\r\n          console.log('Document successfully written!');\r\n          setOpenSuccess(true);\r\n\r\n          setTimeout(function () {\r\n            setOpenSuccess(false);\r\n            props.closeOrder();\r\n          }, 1000);\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openSuccess}\r\n        /*  onClose={this.handleClose} */\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        disableBackdropClick\r\n      >\r\n        <Alert severity=\"success\">\r\n          <AlertTitle>Success</AlertTitle>\r\n          <strong>Settings Updated</strong>\r\n        </Alert>\r\n      </Dialog>\r\n      <DialogContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Box mb={3}>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Update settings\r\n              </Typography>\r\n            </Box>\r\n            {/*  {error && <Alert severity=\"error\">{error}</Alert>} */}\r\n            <form className={classes.root} noValidate>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Fuel Price\"\r\n                margin=\"normal\"\r\n                name=\"fuelPrice\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={price}\r\n                onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n              />\r\n              {error && error.fuelPrice && (\r\n                <Alert severity=\"error\">{error.fuelPrice.message}</Alert>\r\n              )}\r\n              {startingStock && (\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Starting Stock\"\r\n                  margin=\"normal\"\r\n                  name=\"startingStock\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  defaultValue={startingStock}\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                />\r\n              )}\r\n              {error && error.startingStock && (\r\n                <Alert severity=\"error\">{error.startingStock.message}</Alert>\r\n              )}\r\n              {minQuantity && (\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Minimum Quantity\"\r\n                  margin=\"normal\"\r\n                  name=\"minQuantity\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  type=\"number\"\r\n                  defaultValue={minQuantity}\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                />\r\n              )}\r\n              {error && error.minQuantity && (\r\n                <Alert severity=\"error\">{error.minQuantity.message}</Alert>\r\n              )}\r\n\r\n              <div>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Vehicle number\"\r\n                  margin=\"normal\"\r\n                  name=\"vehicleNumber\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  disabled\r\n                  /* onChange={(e) => setmobileNumber(e.target.value)} */\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Driver name\"\r\n                  margin=\"normal\"\r\n                  name=\"driverName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  disabled\r\n                  /* onChange={(e) => setmobileNumber(e.target.value)} */\r\n                />\r\n                {maxFutureDay && (\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Advanced booking limit(days)\"\r\n                    margin=\"normal\"\r\n                    name=\"maxFutureDay\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    defaultValue={maxFutureDay}\r\n                    onChange={(e) =>\r\n                      handleChange(e.target.name, e.target.value)\r\n                    }\r\n                  />\r\n                )}\r\n                {error && error.maxFutureDay && (\r\n                  <Alert severity=\"error\">{error.maxFutureDay.message}</Alert>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </Container>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleSubmit} color=\"primary\">\r\n          Update Settings\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { navigate } from 'hookrouter';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\nimport UpdateProfileDialog from '../../views/dialog/UpdateProfileDialog';\r\nimport UserSettingsDialog from '../../views/dialog/UserSettingsDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport db from '../../firebase';\r\n\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h2 = {\r\n  fontSize: '0.8rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '1.2rem'\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2rem'\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, userData, price, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const { logout } = useAuth();\r\n  /* const navigate = useNavigate(); */\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n  const { currentUser } = useAuth();\r\n  const [drawerState, setDrawerState] = useState(false);\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event) {\r\n      if (\r\n        event.type === 'keydown' &&\r\n        (event.key === 'Tab' || event.key === 'Shift')\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    setDrawerState(open);\r\n  };\r\n\r\n  const handleClickUpdateProfileOpen = () => {\r\n    setOpenUpdate(true);\r\n  };\r\n\r\n  const handleClickUpdateSettingsOpen = () => {\r\n    setOpenSettings(true);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleCloseSettings = () => {\r\n    toggleDrawer(false);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await logout();\r\n      navigate('/login', true);\r\n    } catch {\r\n      console.log('Failed to log out');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AppBar\r\n          className={clsx(classes.root, className)}\r\n          elevation={0}\r\n          {...rest}\r\n        >\r\n          <Toolbar>\r\n            <Logo />\r\n            <Box flexGrow={1} />\r\n            {/* <Typography style={{ color: 'white' }} variant=\"h3\">\r\n              SHAKTHI GANAPATHI FUEL STATION\r\n            </Typography> */}\r\n            <ThemeProvider theme={theme}>\r\n              <Typography style={{ color: 'white' }} variant=\"h2\">\r\n                Shakti Ganapathi Fuel Station\r\n              </Typography>\r\n            </ThemeProvider>\r\n            <Box flexGrow={1} />\r\n            {/* <Hidden mdDown> */}\r\n            {userData && userData.isOwner && (\r\n              <IconButton color=\"inherit\">\r\n                <Badge\r\n                  badgeContent={notifications.length}\r\n                  color=\"primary\"\r\n                  variant=\"dot\"\r\n                >\r\n                  <SettingsIcon onClick={toggleDrawer(true)} />\r\n                </Badge>\r\n              </IconButton>\r\n            )}\r\n            <IconButton color=\"inherit\">\r\n              <Badge\r\n                badgeContent={notifications.length}\r\n                color=\"primary\"\r\n                variant=\"dot\"\r\n              >\r\n                <PersonOutlineIcon onClick={handleClickUpdateProfileOpen} />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton color=\"inherit\">\r\n              <InputIcon onClick={handleSubmit} />\r\n            </IconButton>\r\n            {/* </Hidden> */}\r\n            {/* <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n          {openUpdate && (\r\n            <Dialog\r\n              open={openUpdate}\r\n              onClose={handleCloseUpdate}\r\n              aria-labelledby=\"form-dialog-title\"\r\n              fullWidth={true}\r\n              maxWidth={'sm'}\r\n            >\r\n              <UpdateProfileDialog\r\n                userData={userData}\r\n                closeOrder={handleCloseUpdate}\r\n              ></UpdateProfileDialog>\r\n            </Dialog>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {/* <Dialog\r\n              open={openSettings}\r\n              onClose={handleCloseSettings}\r\n              aria-labelledby=\"form-dialog-title\"\r\n              fullWidth={true}\r\n              maxWidth={'sm'}\r\n            > */}\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerState}\r\n            onClose={toggleDrawer(false)}\r\n          >\r\n            <UserSettingsDialog\r\n              userData={userData}\r\n              price={price}\r\n              closeOrder={toggleDrawer(false)}\r\n            ></UserSettingsDialog>\r\n          </Drawer>\r\n          {/* </Dialog> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n    /* [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    } */\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(1.5, 1),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light'\r\n        ? theme.palette.grey[200]\r\n        : theme.palette.grey[800],\r\n    bottom: 0,\r\n    position: 'sticky'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  const [userData, setUserData] = useState();\r\n  const [price, setPrice] = useState(92);\r\n\r\n  const currentPriceRef = db\r\n    .collection('priceForTheDay')\r\n    .doc('e8kgvrn1XGzqM4JYAG3X');\r\n\r\n  /*   useEffect(() => {\r\n        return currentPriceRef.onSnapshot(function (doc) {\r\n          if (doc) {\r\n            doc.data() && setPrice(doc.data().price);\r\n          }\r\n        });\r\n      }, []); */\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .onSnapshot((snapShot) => setUserData(snapShot.data()));\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to Update user data');\r\n    }\r\n\r\n    return currentPriceRef.onSnapshot(function (doc) {\r\n      if (doc) {\r\n        doc.data() && setPrice(doc.data().price);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar\r\n        onMobileNavOpen={() => setMobileNavOpen(true)}\r\n        userData={userData}\r\n        updateUserData={setUserData}\r\n        price={price}\r\n        setPrice={setPrice}\r\n      />\r\n\r\n      {userData && userData.isOwner !== undefined && <p>HI</p>}\r\n      {/* <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      /> */}\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            {/* <Outlet /> */}\r\n            {children}\r\n            <footer className={classes.footer}>\r\n              <Container /*  maxWidth=\"sm\" */>\r\n                <Grid container justify=\"center\" className={classes.pos}>\r\n                  <Grid item>\r\n                    <Typography style={{ color: 'black' }} variant=\"caption\">\r\n                      Phone : 9008761088 | Email : r6mesh@gmail.com | Toll Free\r\n                      No : 1800 2333 555\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Container>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { A, navigate } from 'hookrouter';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport moment from 'moment';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  /* const navigate = useNavigate(); */\r\n  const { signup } = useAuth();\r\n  const { currentUser } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setfirstName] = useState(false);\r\n  const [lastName, setlastName] = useState(false);\r\n  const [email, setemail] = useState(false);\r\n  const [password, setpassword] = useState(false);\r\n  const [confirmPassword, setconfirmPassword] = useState(false);\r\n  const [mobileNumber, setmobileNumber] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      return setError('Passwords do not match');\r\n    }\r\n\r\n    if (mobileNumber && typeof mobileNumber !== 'undefined') {\r\n      let pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(mobileNumber)) {\r\n        return setError('Please enter only number');\r\n      } else if (mobileNumber.length !== 10) {\r\n        return setError('Please enter valid phone number');\r\n      }\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await signup(email, password).then((cred) => {\r\n        // Updates the user attributes:\r\n\r\n        cred.user\r\n          .updateProfile({\r\n            displayName: `${firstName} ${lastName}`\r\n          })\r\n          .then(function () {\r\n            console.log('Name Updated');\r\n          });\r\n\r\n        return db\r\n          .collection('users')\r\n          .doc(cred.user.uid)\r\n          .set({\r\n            isCustomer: true,\r\n            mobileNumber: mobileNumber,\r\n            customerName: `${firstName} ${lastName}`,\r\n            email: email,\r\n            created: moment(new Date()).format('MMM Do YYYY')\r\n          });\r\n      });\r\n      navigate('/app/dashboard', { replace: true });\r\n    } catch {\r\n      setError('Failed to create an account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Box mb={3}>\r\n            <Typography color=\"textPrimary\" variant=\"h2\">\r\n              Create new account\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n              Use your email to create new account\r\n            </Typography>\r\n          </Box>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          <form className=\"form\" noValidate>\r\n            <TextField\r\n              fullWidth\r\n              label=\"First Name\"\r\n              margin=\"normal\"\r\n              name=\"firstName\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setfirstName(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Last Name\"\r\n              margin=\"normal\"\r\n              name=\"LastName\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setlastName(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Mobile number\"\r\n              margin=\"normal\"\r\n              name=\"mobileNumber\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setmobileNumber(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setemail(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setpassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Confirm Password\"\r\n              margin=\"normal\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            />\r\n\r\n            <Box my={2}>\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={loading}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign up now\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n          <Typography color=\"textSecondary\" variant=\"body1\">\r\n            Have an account?{' '}\r\n            <A /* component={RouterLink} */ href=\"/login\" variant=\"h6\">\r\n              Sign in\r\n            </A>\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\n/* import { useRoutes } from 'react-router-dom'; */\r\nimport { useRoutes } from 'hookrouter';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\n/* import routes from 'src/routes'; */\r\nimport { AuthProvider } from 'src/contexts/AuthContext';\r\nimport { StoreProvider, createStore } from 'easy-peasy';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport model from './model';\r\n\r\nconst App = () => {\r\n  const routes = {\r\n    '/': () => (\r\n      <MainLayout>\r\n        <LoginView />\r\n      </MainLayout>\r\n    ),\r\n    '/login': () => (\r\n      <MainLayout>\r\n        <LoginView />\r\n      </MainLayout>\r\n    ),\r\n    '/app/dashboard': () => (\r\n      <DashboardLayout>\r\n        <DashboardView />\r\n      </DashboardLayout>\r\n    ),\r\n    '/register': () => (\r\n      <MainLayout>\r\n        <RegisterView />\r\n      </MainLayout>\r\n    )\r\n  };\r\n\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n\r\n        {/* <LoginView /> */}\r\n        {routing || <h1>Invalid routing</h1>}\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nReactDOM.render(\r\n  /* <BrowserRouter> */\r\n  <App />,\r\n  /* </BrowserRouter> */\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}