{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","firebase.js","contexts/AuthContext.js","views/dialog/UpdateProfileDialog.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","views/customer/CustomerListView/Results.js","utils/getInitials.js","views/customer/CustomerListView/Toolbar.js","views/customer/CustomerListView/data.js","views/customer/CustomerListView/index.js","views/dialog/OrderDialog.js","views/reports/DashboardView/Budget.js","views/reports/DashboardView/TotalCustomers.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/TasksProgress.js","views/reports/DashboardView/index.js","views/reports/DashboardView/TotalProfit.js","views/reports/DashboardView/TrafficByDevice.js","views/auth/LoginView.js","views/errors/NotFoundView.js","views/product/ProductListView/Toolbar.js","views/product/ProductListView/ProductCard.js","views/product/ProductListView/data.js","views/product/ProductListView/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","key","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","onAuthStateChanged","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","root","red","differenceIcon","differenceValue","formControl","minWidth","selectEmpty","marginTop","UpdateProfileDialog","userRef","collection","doc","uid","userData","setUserData","get","data","address","setInputFields","id","tag","console","log","fetchData","uuidv4","inputFields","error","setError","displayName","split","firstName","setfirstName","lastName","setlastName","mobileNumber","setmobileNumber","handleChangeInput","event","newInputFields","target","e","preventDefault","RegExp","test","length","updateProfile","then","newUserData","set","closeOrder","DialogContent","Container","maxWidth","mb","Alert","severity","noValidate","TextField","fullWidth","label","required","defaultValue","onChange","inputField","style","IconButton","disabled","onClick","values","pop","handleRemoveFields","DialogActions","TopBar","onMobileNavOpen","notifications","navigate","useNavigate","openUpdate","setOpenUpdate","handleCloseUpdate","replace","AppBar","elevation","Badge","badgeContent","Dialog","aria-labelledby","price","overflow","wrapper","flex","contentContainer","DashboardLayout","setMobileNavOpen","err","updateUserData","toolbar","MainLayout","Page","forwardRef","ref","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","format","CardActions","states","ProfileDetails","phone","state","country","setValues","handleChange","autoComplete","CardHeader","subheader","Grid","container","md","xs","helperText","type","select","SelectProps","native","option","minHeight","Account","lg","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","TableBody","slice","hover","selected","selectedIndex","concat","handleSelectOne","avatarUrl","v","toUpperCase","join","getInitials","city","createdAt","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","importButton","exportButton","Toolbar","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","uuid","street","CustomerListView","OrderDialog","quant","setQuant","paymentType","setPaymentType","remarks","setRemarks","newTag","setnewTag","newAddress","setnewAddress","userAddress","setUserAddress","random","openNewAddress","setOpenNewAddress","handleCloseNewAddress","direction","justify","FormControl","Select","labelId","MenuItem","FormHelperText","Fab","aria-label","autoFocus","readOnly","disableBackdropClick","DialogTitle","newAddressArray","catch","userID","orderID","quantity","orderStatus","customerName","created","Date","now","Budget","openOrder","setOpenOrder","handleCloseOrder","paddingRight","actions","subtract","image","orange","green","TotalCustomers","order","Chip","Dashboard","currentOrderRef","allOrderRef","orders","setOrders","allOrders","setAllOrders","where","initialOrders","forEach","push","onSnapshot","updatedOrders","showCurrentOrder","sm","xl","isCustomer","isDriver","undefined","LoginView","emailRef","useRef","passwordRef","setemail","setpassword","innerRef","my","Link","NotFoundView","align","textAlign","statsItem","statsIcon","ProductCard","product","media","description","totalDownloads","productCard","ProductList","products","Pagination","RegisterView","confirmPassword","setconfirmPassword","cred","Notifications","wrap","FormControlLabel","control","defaultChecked","Password","confirm","SettingsView","routes","path","element","AccountView","DashboardView","ProductListView","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fedf34b6.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/app/customers',\r\n    icon: UsersIcon,\r\n    title: 'Customers'\r\n  },\r\n  {\r\n    href: '/app/products',\r\n    icon: ShoppingBagIcon,\r\n    title: 'Products'\r\n  },\r\n  {\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'Account'\r\n  },\r\n  {\r\n    href: '/app/settings',\r\n    icon: SettingsIcon,\r\n    title: 'Settings'\r\n  },\r\n  {\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'Login'\r\n  },\r\n  {\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: 'Register'\r\n  },\r\n  {\r\n    href: '/404',\r\n    icon: AlertCircleIcon,\r\n    title: 'Error'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map(item => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst Logo = (props) => {\r\n  return <Avatar alt=\"Logo\" src=\"/static/logo.jpg\" {...props} />;\r\n};\r\n\r\nexport default Logo;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const db = app.firestore();\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip,\r\n  Container\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function UpdateProfileDialog(props) {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n\r\n  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  }\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await userRef.get();\r\n\r\n      setUserData(data.data());\r\n      data.data() &&\r\n        data.data().address &&\r\n        setInputFields(\r\n          data.data().address.map((address) => {\r\n            return { id: address.id, tag: address.tag, value: address.value };\r\n          })\r\n        );\r\n      console.log(userData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [inputFields, setInputFields] = useState([\r\n    { id: uuidv4(), tag: '', value: '' }\r\n  ]);\r\n\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setfirstName] = useState(\r\n    currentUser.displayName.split(' ')[0]\r\n  );\r\n  const [lastName, setlastName] = useState(\r\n    currentUser.displayName.split(' ')[1]\r\n  );\r\n\r\n  const [mobileNumber, setmobileNumber] = useState();\r\n\r\n  const handleChangeInput = (id, event) => {\r\n    console.log(inputFields, id, event);\r\n\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n        console.log(event.target.name, event.target.value);\r\n      }\r\n\r\n      return i;\r\n    });\r\n\r\n    setInputFields(newInputFields);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { id: uuidv4(), tag: '', value: '' }]);\r\n  };\r\n\r\n  const handleRemoveFields = (id) => {\r\n    const values = [...inputFields];\r\n    values.pop();\r\n\r\n    setInputFields(values);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (firstName === '' || lastName === '') {\r\n      return setError('Name Cannot be empty');\r\n    }\r\n\r\n    if (mobileNumber && typeof mobileNumber !== 'undefined') {\r\n      let pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(mobileNumber)) {\r\n        return setError('Please enter only number');\r\n      } else if (mobileNumber.length !== 10) {\r\n        return setError('Please enter valid phone number');\r\n      }\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n\r\n      // Updates the user attributes:\r\n\r\n      currentUser\r\n        .updateProfile({\r\n          displayName: `${firstName} ${lastName}`\r\n        })\r\n        .then(\r\n          function () {\r\n            console.log('Name Updated');\r\n          },\r\n          function (error) {\r\n            setError(error);\r\n          }\r\n        );\r\n\r\n      let newUserData = {\r\n        ...userData,\r\n        mobileNumber: mobileNumber ? mobileNumber : userData.mobileNumber,\r\n        address: inputFields\r\n      };\r\n      console.log(newUserData);\r\n      return db\r\n        .collection('users')\r\n        .doc(currentUser.uid)\r\n        .set(newUserData)\r\n        .then(() => props.closeOrder());\r\n    } catch (err) {\r\n      console.log(err);\r\n      setError('Failed to Update account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <DialogContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Box mb={3}>\r\n              <Typography color=\"textPrimary\" variant=\"h2\">\r\n                Update your profile\r\n              </Typography>\r\n            </Box>\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            <form className={classes.root} noValidate>\r\n              <TextField\r\n                fullWidth\r\n                label=\"First Name\"\r\n                margin=\"normal\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={firstName}\r\n                onChange={(e) => setfirstName(e.target.value)}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last Name\"\r\n                margin=\"normal\"\r\n                name=\"LastName\"\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={lastName}\r\n                onChange={(e) => setlastName(e.target.value)}\r\n              />\r\n              {userData && (\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Mobile number\"\r\n                  margin=\"normal\"\r\n                  name=\"mobileNumber\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  defaultValue={userData.mobileNumber}\r\n                  onChange={(e) => setmobileNumber(e.target.value)}\r\n                />\r\n              )}\r\n\r\n              {inputFields &&\r\n                inputFields.length > 0 &&\r\n                inputFields.map(\r\n                  (inputField) => (\r\n                    console.log(inputField),\r\n                    (\r\n                      <div key={inputField.id}>\r\n                        <TextField\r\n                          name=\"tag\"\r\n                          label=\"Tag\"\r\n                          variant=\"outlined\"\r\n                          /* size=\"small\" */\r\n                          style={{ width: '25%' }}\r\n                          defaultValue={inputField ? inputField.tag : ''}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                        <TextField\r\n                          name=\"value\"\r\n                          label=\"Value\"\r\n                          variant=\"outlined\"\r\n                          defaultValue={inputField ? inputField.value : ''}\r\n                          style={{ width: '48%' }}\r\n                          onChange={(event) =>\r\n                            handleChangeInput(inputField.id, event)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    )\r\n                  )\r\n                )}\r\n              <IconButton\r\n                disabled={inputFields && inputFields.length === 1}\r\n                onClick={() => handleRemoveFields()}\r\n              >\r\n                <RemoveIcon />\r\n              </IconButton>\r\n              <IconButton onClick={handleAddFields}>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </form>\r\n          </Container>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button disabled={loading} onClick={handleSubmit} color=\"primary\">\r\n          Update Profile\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\nimport UpdateProfileDialog from '../../views/dialog/UpdateProfileDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport db from '../../firebase';\r\n\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, onMobileNavOpen, userData, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  const { logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const { currentUser } = useAuth();\r\n\r\n  const handleClickUpdateOpen = () => {\r\n    setOpenUpdate(true);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await logout();\r\n      navigate('/login', { replace: true });\r\n    } catch {\r\n      console.log('Failed to log out');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n        <Toolbar>\r\n          <Logo />\r\n\r\n          <Box flexGrow={1} />\r\n          {/* <Hidden mdDown> */}\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <PersonOutlineIcon onClick={handleClickUpdateOpen} />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon onClick={handleSubmit} />\r\n          </IconButton>\r\n          {/* </Hidden> */}\r\n          {/* <Hidden lgUp>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div>\r\n        {openUpdate && (\r\n          <Dialog\r\n            open={openUpdate}\r\n            onClose={handleCloseUpdate}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth={'sm'}\r\n          >\r\n            <UpdateProfileDialog\r\n              userData={userData}\r\n              price={0}\r\n              closeOrder={handleCloseUpdate}\r\n            ></UpdateProfileDialog>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n    /* [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    } */\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const { currentUser } = useAuth();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  /*  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  } */\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  /* try {\r\n    db.collection('users')\r\n      .doc(currentUser.uid)\r\n      .onSnapshot((snapShot) => setUserData(snapShot.data()));\r\n    \r\n  } catch (err) {\r\n    console.log(err);\r\n    console.log('Failed to Update user data');\r\n  } */\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar\r\n        onMobileNavOpen={() => setMobileNavOpen(true)}\r\n        userData={userData}\r\n        updateUserData={setUserData}\r\n      />\r\n\r\n      {/* <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      /> */}\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Phone\r\n                </TableCell>\r\n                <TableCell>\r\n                  Registration date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.phone}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button className={classes.importButton}>\r\n          Import\r\n        </Button>\r\n        <Button className={classes.exportButton}>\r\n          Export\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add customer\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search customer\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000,\r\n    email: 'ekaterina.tankova@devias.io',\r\n    name: 'Ekaterina Tankova',\r\n    phone: '304-428-3097'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_4.png',\r\n    createdAt: 1555016400000,\r\n    email: 'cao.yu@devias.io',\r\n    name: 'Cao Yu',\r\n    phone: '712-351-5711'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000,\r\n    email: 'alexa.richardson@devias.io',\r\n    name: 'Alexa Richardson',\r\n    phone: '770-635-2682'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_5.png',\r\n    createdAt: 1554930000000,\r\n    email: 'anje.keizer@devias.io',\r\n    name: 'Anje Keizer',\r\n    phone: '908-691-3242'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000,\r\n    email: 'clarke.gillebert@devias.io',\r\n    name: 'Clarke Gillebert',\r\n    phone: '972-333-4106'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000,\r\n    email: 'adam.denisov@devias.io',\r\n    name: 'Adam Denisov',\r\n    phone: '858-602-3409'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_7.png',\r\n    createdAt: 1554325200000,\r\n    email: 'ava.gregoraci@devias.io',\r\n    name: 'Ava Gregoraci',\r\n    phone: '415-907-2647'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000,\r\n    email: 'emilee.simchenko@devias.io',\r\n    name: 'Emilee Simchenko',\r\n    phone: '702-661-1654'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_9.png',\r\n    createdAt: 1554702800000,\r\n    email: 'kwak.seong.min@devias.io',\r\n    name: 'Kwak Seong-Min',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000,\r\n    email: 'merrile.burgett@devias.io',\r\n    name: 'Merrile Burgett',\r\n    phone: '801-301-7894'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const [customers] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customers\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Toolbar />\r\n        <Box mt={3}>\r\n          <Results customers={customers} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { db } from '../../firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function OrderDialog(props) {\r\n  const classes = useStyles();\r\n\r\n  const [quant, setQuant] = useState(0);\r\n  const [paymentType, setPaymentType] = useState(1);\r\n  const [remarks, setRemarks] = useState('');\r\n  const [newTag, setnewTag] = useState();\r\n  const [newAddress, setnewAddress] = useState();\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  var userRef;\r\n  if (currentUser) {\r\n    userRef = db.collection('users').doc(currentUser.uid);\r\n  }\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await userRef.get();\r\n\r\n      setUserData(data.data());\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  /* useEffect(() => {\r\n    userRef\r\n      .set(userData)\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n  }, [userData]); */\r\n\r\n  const [userAddress, setUserAddress] = useState(\r\n    userData && userData.address ? userData.address[0].value : ''\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    setUserAddress(event.target.value);\r\n  };\r\n\r\n  const random = Math.floor(1000 + Math.random() * 9000);\r\n\r\n  const handlePlaceOrder = () => {\r\n    db.collection('orders')\r\n      .doc()\r\n      .set({\r\n        userID: currentUser.uid,\r\n        orderID: `SG-${random}`,\r\n\r\n        quantity: quant,\r\n        price: quant * props.price,\r\n\r\n        paymentType: paymentType,\r\n        orderStatus: 1,\r\n        remarks: remarks,\r\n        customerName: currentUser.displayName,\r\n        mobileNumber: userData.mobileNumber,\r\n        created: Date.now()\r\n      })\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n        props.closeOrder();\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n  };\r\n\r\n  const [openNewAddress, setOpenNewAddress] = useState(false);\r\n\r\n  const handleClickOpenNewAddress = () => {\r\n    setOpenNewAddress(true);\r\n  };\r\n\r\n  const handleCloseNewAddress = () => {\r\n    setOpenNewAddress(false);\r\n  };\r\n\r\n  const handleAddNewAddress = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newAddressArray;\r\n\r\n    if (userData.address) {\r\n      newAddressArray = [\r\n        ...userData.address,\r\n        {\r\n          id: uuidv4(),\r\n          tag: newTag,\r\n          value: newAddress\r\n        }\r\n      ];\r\n    } else {\r\n      newAddressArray = [{ id: uuidv4(), tag: newTag, value: newAddress }];\r\n    }\r\n\r\n    let newUserData = {\r\n      ...userData,\r\n      address: newAddressArray\r\n    };\r\n    setUserData(newUserData);\r\n\r\n    userRef\r\n      .set(newUserData)\r\n      .then(function () {\r\n        console.log('Document successfully written!');\r\n      })\r\n      .catch(function (error) {\r\n        console.error('Error writing document: ', error);\r\n      });\r\n\r\n    console.log(newUserData);\r\n    setOpenNewAddress(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DialogContent>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"space-around\"\r\n          alignItems=\"center\"\r\n          width=\"100%\"\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-start\"\r\n              >\r\n                <Box flexDirection=\"column\">\r\n                  <Typography color=\"textSecondary\" variant=\"h6\">\r\n                    {/* {`SG-${random}`} */}\r\n                  </Typography>\r\n                  <Typography color=\"textPrimary\" variant=\"h2\">\r\n                    {currentUser && currentUser.displayName}\r\n                  </Typography>\r\n\r\n                  <Typography color=\"primary\" variant=\"h6\">\r\n                    {userData && userData.mobileNumber}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"caption\">\r\n                {''}\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" variant=\"h4\">\r\n                {userAddress}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <FormControl className={classes.formControl} width={1}>\r\n                {userData && userData.address && (\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    defaultValue={userData.address[0].tag}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {userData.address.map((item) => {\r\n                      return (\r\n                        <MenuItem key={item.tag} value={item.value}>\r\n                          {item.tag}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n\r\n                <FormHelperText>Select Address</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item></Grid>\r\n            <Grid item>\r\n              <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n                <FormControl className={classes.formControl}>\r\n                  <Fab\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"add\"\r\n                    onClick={handleClickOpenNewAddress}\r\n                  >\r\n                    <AddIcon />\r\n                  </Fab>\r\n                  <FormHelperText>Add new address</FormHelperText>\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  autoFocus\r\n                  id=\"quantitySelect\"\r\n                  label=\"Qty\"\r\n                  onChange={(e) => setQuant(e.target.value)}\r\n                  type=\"number\"\r\n                />\r\n                <FormHelperText>Choose Quantity</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <TextField\r\n                  autoFocus\r\n                  id=\"price\"\r\n                  label=\"Price\"\r\n                  type=\"text\"\r\n                  value={quant * props.price}\r\n                  InputProps={{\r\n                    readOnly: true\r\n                  }}\r\n                />\r\n\r\n                <FormHelperText>Calculated Price</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item>\r\n              <FormControl className={classes.formControl}>\r\n                <Select\r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"demo-simple-select-helper\"\r\n                  defaultValue={1}\r\n                  onChange={(e) => setPaymentType(e.target.value)}\r\n                >\r\n                  <MenuItem value={1}>Cash</MenuItem>\r\n                  <MenuItem value={2}>Credit</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Choose Payment Option</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          autoFocus\r\n          fullWidth\r\n          margin=\"dense\"\r\n          id=\"remarks\"\r\n          label=\"Remarks\"\r\n          type=\"text\"\r\n          onChange={(e) => setRemarks(e.target.value)}\r\n          placeholder=\"Place order for a later date | Provide delivery instructions\"\r\n        />\r\n\r\n        <div>\r\n          <Dialog\r\n            disableBackdropClick\r\n            open={openNewAddress}\r\n            onClose={handleCloseNewAddress}\r\n          >\r\n            <DialogTitle>Add New Address</DialogTitle>\r\n            <DialogContent>\r\n              <form className={classes.container}>\r\n                <FormControl className={classes.formControl}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"New Tag\"\r\n                    margin=\"normal\"\r\n                    name=\"addressTag\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setnewTag(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"New Address\"\r\n                    margin=\"normal\"\r\n                    name=\"address\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    onChange={(e) => setnewAddress(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n              </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseNewAddress} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleAddNewAddress} color=\"primary\">\r\n                Ok\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handlePlaceOrder} color=\"primary\" disabled={!quant}>\r\n          Place Order\r\n        </Button>\r\n\r\n        <Button onClick={props.closeOrder} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Button,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OrderDialog from '../../dialog/OrderDialog';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { db } from '../../../firebase';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Budget = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [openOrder, setOpenOrder] = useState(false);\r\n\r\n  const handleClickOrderOpen = () => {\r\n    setOpenOrder(true);\r\n  };\r\n\r\n  const handleCloseOrder = () => {\r\n    setOpenOrder(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={3}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h3\">\r\n              Today's Price\r\n            </Typography>\r\n            <Typography color=\"textPrimary\" variant=\"h3\">\r\n              {props.price}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Box\r\n            mt={4}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            paddingRight={2}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              /* disabled={} */\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={handleClickOrderOpen}\r\n            >\r\n              Order Now\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Box mt={2} display=\"flex\" alignItems=\"center\">\r\n          <Typography color=\"textSecondary\" variant=\"caption\">\r\n            <i className=\"fas fa-rupee-sign\"></i> / Litre\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n\r\n      <div>\r\n        {openOrder && (\r\n          <Dialog\r\n            open={openOrder}\r\n            onClose={handleCloseOrder}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth={true}\r\n            maxWidth={'sm'}\r\n          >\r\n            <OrderDialog\r\n              price={props.price}\r\n              closeOrder={handleCloseOrder}\r\n            ></OrderDialog>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  Chip\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ order }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\" spacing={1}>\r\n          <Grid item>\r\n            <Typography color=\"textSecondary\" variant=\"h3\">\r\n              Current Order\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              {order.orderID}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container justify=\"center\" spacing={6}>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {order.quantity}{' '}\r\n                  <Typography color=\"textSecondary\" variant=\"caption\">\r\n                    Liters\r\n                  </Typography>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  <i variant=\"caption\" className=\"fas fa-rupee-sign\"></i>{' '}\r\n                  {order.price}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  {order.paymentType === 1 ? 'Cash' : 'Credit'}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container justify=\"center\" spacing={8}>\r\n              <Grid item>\r\n                <Chip color=\"secondary\" label=\"In-Progress\" size=\"small\" />\r\n              </Grid>\r\n              <Grid item alignItems=\"center\">\r\n                <Typography color=\"textSecondary\" variant=\"caption\">\r\n                  OTP : ####\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestOrders = ({ ...rest }) => {\r\n  const classes = useStyles();\r\n  const [orders] = useState(data);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root)} {...rest}>\r\n      <CardHeader title=\"Latest Orders\" />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={800}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order Ref</TableCell>\r\n                <TableCell>Location</TableCell>\r\n                <TableCell sortDirection=\"desc\">\r\n                  <Tooltip enterDelay={300} title=\"Sort\">\r\n                    <TableSortLabel active direction=\"desc\">\r\n                      Date\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell>Payment Method</TableCell>\r\n                <TableCell>Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order) => (\r\n                <TableRow hover key={order.id}>\r\n                  <TableCell>{order.ref}</TableCell>\r\n                  <TableCell>{order.customer.name}</TableCell>\r\n                  <TableCell>\r\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip color=\"primary\" label={order.status} size=\"small\" />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst data = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst LatestProducts = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest Products\"\r\n      />\r\n      <Divider />\r\n      <List>\r\n        {products.map((product, i) => (\r\n          <ListItem\r\n            divider={i < products.length - 1}\r\n            key={product.id}\r\n          >\r\n            <ListItemAvatar>\r\n              <img\r\n                alt=\"Product\"\r\n                className={classes.image}\r\n                src={product.imageUrl}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={product.name}\r\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n            />\r\n            <IconButton\r\n              edge=\"end\"\r\n              size=\"small\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={400}\r\n          position=\"relative\"\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              75.5%\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <LinearProgress\r\n            value={75.5}\r\n            variant=\"determinate\"\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Budget from './Budget';\r\nimport LatestOrders from './LatestOrders';\r\nimport LatestProducts from './LatestProducts';\r\nimport Sales from './Sales';\r\nimport TasksProgress from './TasksProgress';\r\nimport TotalCustomers from './TotalCustomers';\r\nimport TotalProfit from './TotalProfit';\r\nimport TrafficByDevice from './TrafficByDevice';\r\nimport { useAuth } from '../../../contexts/AuthContext';\r\nimport { db } from '../../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(92);\r\n  const { currentUser } = useAuth();\r\n  const [orders, setOrders] = useState([]);\r\n  const [allOrders, setAllOrders] = useState([]);\r\n  let currentOrderRef;\r\n  let allOrderRef;\r\n\r\n  {\r\n    currentUser &&\r\n      currentUser.uid &&\r\n      (currentOrderRef = db\r\n        .collection('orders')\r\n        .where('userID', '==', currentUser.uid)\r\n        .where('orderStatus', '==', 1));\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await currentOrderRef.get();\r\n\r\n        let initialOrders = [];\r\n        data.forEach(function (doc) {\r\n          initialOrders.push(doc.data());\r\n        });\r\n\r\n        setOrders(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return currentOrderRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            updatedOrders.push(doc.data());\r\n          });\r\n        }\r\n        setOrders(updatedOrders);\r\n      });\r\n    }, []);\r\n\r\n    allOrderRef = db.collection('orders').where('orderStatus', '==', 1);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const data = await allOrderRef.get();\r\n        let initialOrders = [];\r\n\r\n        data.forEach(function (doc) {\r\n          initialOrders.push(doc.data());\r\n        });\r\n\r\n        setAllOrders(initialOrders);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      return allOrderRef.onSnapshot(function (data) {\r\n        let updatedOrders = [];\r\n        if (data) {\r\n          data.forEach(function (doc) {\r\n            updatedOrders.push(doc.data());\r\n          });\r\n        }\r\n        setAllOrders(updatedOrders);\r\n      });\r\n    }, []);\r\n  }\r\n\r\n  const [userData, setUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      db.collection('users')\r\n        .doc(currentUser.uid)\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc) {\r\n            setUserData(doc.data());\r\n          }\r\n        });\r\n    } catch (err) {\r\n      console.log(err);\r\n      console.log('Failed to get user data');\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const showCurrentOrder = (order) => {\r\n    return (\r\n      <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n        <TotalCustomers order={order} />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        {console.log(\r\n          userData,\r\n          userData && userData.isCustomer,\r\n          userData && userData.isDriver\r\n        )}\r\n        {userData && userData.isCustomer && (\r\n          <div>\r\n            <Typography color=\"textPrimary\" variant=\"h2\">\r\n              Welcome {currentUser && currentUser.displayName}\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                <Budget price={price} />\r\n              </Grid>\r\n              {orders.map((order) => {\r\n                return showCurrentOrder(order);\r\n              })}\r\n              {console.log(orders)}\r\n              {/*  <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid> */}\r\n              {/* <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                <LatestOrders />\r\n              </Grid> */}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n        {userData && userData.isDriver !== undefined && (\r\n          <div>\r\n            <Typography color=\"textPrimary\" variant=\"h2\">\r\n              Welcome {currentUser && currentUser.displayName}\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              {/* <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                <Budget price={price} />\r\n              </Grid> */}\r\n\r\n              {allOrders.map((order) => {\r\n                return showCurrentOrder(order);\r\n              })}\r\n              {/*  <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts />\r\n          </Grid> */}\r\n              {/* <Grid item lg={12} md={12} xl={9} xs={12}>\r\n                <LatestOrders />\r\n              </Grid>*/}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst TrafficByDevice = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mt={2}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              p={1}\r\n              textAlign=\"center\"\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTrafficByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setemail] = useState(false);\r\n  const [password, setpassword] = useState(false);\r\n\r\n \r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError('');\r\n\r\n      setLoading(true);\r\n      await login(email, password);\r\n      navigate('/app/dashboard', { replace: true });\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Login\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          {/* <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email('Must be a valid email')\r\n                .max(255)\r\n                .required('Email is required'),\r\n              password: Yup.string()\r\n                .max(255)\r\n                .required('Password is required')\r\n            })}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form\r\n              /* onSubmit={\r\n                  (handleSubmit,\r\n                  console.log({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values\r\n                  }))\r\n                } \r\n              > */}\r\n          <Box mb={3}>\r\n            <Typography color=\"textPrimary\" variant=\"h2\">\r\n              Sign in\r\n            </Typography>\r\n          </Box>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          <form className=\"form\" noValidate>\r\n            <TextField\r\n              /*  error={Boolean(touched.email && errors.email)} */\r\n              fullWidth\r\n              /* helperText={touched.email && errors.email} */\r\n              label=\"Email Address\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              /* onBlur={handleBlur}\r\n                  onChange={handleChange} */\r\n              type=\"email\"\r\n              required\r\n              variant=\"outlined\"\r\n              innerRef={emailRef}\r\n              onChange={(e) => setemail(e.target.value)}\r\n            />\r\n            <TextField\r\n              /* error={Boolean(touched.password && errors.password)} */\r\n              fullWidth\r\n              /* helperText={touched.password && errors.password} */\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              /* onBlur={handleBlur}\r\n                  onChange={handleChange} */\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              innerRef={passwordRef}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              required\r\n            />\r\n            <Box my={2}>\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={loading}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign in now\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n          {/* </form>\r\n            )}\r\n          </Formik> */}\r\n          <Typography color=\"textSecondary\" variant=\"body1\">\r\n            Don&apos;t have an account?{' '}\r\n            <Link component={RouterLink} to=\"/register\" variant=\"h6\">\r\n              Sign up\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button className={classes.importButton}>\r\n          Import\r\n        </Button>\r\n        <Button className={classes.exportButton}>\r\n          Export\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add product\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search product\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          mb={3}\r\n        >\r\n          <Avatar\r\n            alt=\"Product\"\r\n            src={product.media}\r\n            variant=\"square\"\r\n          />\r\n        </Box>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h4\"\r\n        >\r\n          {product.title}\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"body1\"\r\n        >\r\n          {product.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <Box flexGrow={1} />\r\n      <Divider />\r\n      <Box p={2}>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n        >\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <AccessTimeIcon\r\n              className={classes.statsIcon}\r\n              color=\"action\"\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              Updated 2hr ago\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <GetAppIcon\r\n              className={classes.statsIcon}\r\n              color=\"action\"\r\n            />\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              {product.totalDownloads}\r\n              {' '}\r\n              Downloads\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    createdAt: '27/03/2019',\r\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    media: '/static/images/products/product_1.png',\r\n    title: 'Dropbox',\r\n    totalDownloads: '594'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '31/03/2019',\r\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    media: '/static/images/products/product_2.png',\r\n    title: 'Medium Corporation',\r\n    totalDownloads: '625'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '03/04/2019',\r\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    media: '/static/images/products/product_3.png',\r\n    title: 'Slack',\r\n    totalDownloads: '857'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    media: '/static/images/products/product_4.png',\r\n    title: 'Lyft',\r\n    totalDownloads: '406'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\r\n    media: '/static/images/products/product_5.png',\r\n    title: 'GitHub',\r\n    totalDownloads: '835'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    media: '/static/images/products/product_6.png',\r\n    title: 'Squarespace',\r\n    totalDownloads: '835'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport Page from 'src/components/Page';\r\nimport Toolbar from './Toolbar';\r\nimport ProductCard from './ProductCard';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  productCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Products\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Toolbar />\r\n        <Box mt={3}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            {products.map((product) => (\r\n              <Grid\r\n                item\r\n                key={product.id}\r\n                lg={4}\r\n                md={6}\r\n                xs={12}\r\n              >\r\n                <ProductCard\r\n                  className={classes.productCard}\r\n                  product={product}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          mt={3}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={3}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { db } from '../../firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const { signup } = useAuth();\r\n  const { currentUser } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setfirstName] = useState(false);\r\n  const [lastName, setlastName] = useState(false);\r\n  const [email, setemail] = useState(false);\r\n  const [password, setpassword] = useState(false);\r\n  const [confirmPassword, setconfirmPassword] = useState(false);\r\n  const [mobileNumber, setmobileNumber] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      return setError('Passwords do not match');\r\n    }\r\n\r\n    if (mobileNumber && typeof mobileNumber !== 'undefined') {\r\n      let pattern = new RegExp(/^[0-9\\b]+$/);\r\n      if (!pattern.test(mobileNumber)) {\r\n        return setError('Please enter only number');\r\n      } else if (mobileNumber.length !== 10) {\r\n        return setError('Please enter valid phone number');\r\n      }\r\n    }\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await signup(email, password).then((cred) => {\r\n        // Updates the user attributes:\r\n\r\n        cred.user\r\n          .updateProfile({\r\n            displayName: `${firstName} ${lastName}`\r\n          })\r\n          .then(\r\n            function () {\r\n              console.log('Name Updated');\r\n            },\r\n            function (error) {\r\n              setError(error);\r\n            }\r\n          );\r\n\r\n        return db.collection('users').doc(cred.user.uid).set({\r\n          isCustomer: true,\r\n          mobileNumber: mobileNumber\r\n        });\r\n      });\r\n      navigate('/app/dashboard', { replace: true });\r\n    } catch {\r\n      setError('Failed to create an account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Box mb={3}>\r\n            <Typography color=\"textPrimary\" variant=\"h2\">\r\n              Create new account\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n              Use your email to create new account\r\n            </Typography>\r\n          </Box>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          <form className=\"form\" noValidate>\r\n            <TextField\r\n              fullWidth\r\n              label=\"First Name\"\r\n              margin=\"normal\"\r\n              name=\"firstName\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setfirstName(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Last Name\"\r\n              margin=\"normal\"\r\n              name=\"LastName\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setlastName(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Mobile number\"\r\n              margin=\"normal\"\r\n              name=\"mobileNumber\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setmobileNumber(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Email\"\r\n              margin=\"normal\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setemail(e.target.value)}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Password\"\r\n              margin=\"normal\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setpassword(e.target.value)}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Confirm Password\"\r\n              margin=\"normal\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              required\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            />\r\n\r\n            <Box my={2}>\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={loading}\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Sign up now\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n          <Typography color=\"textSecondary\" variant=\"body1\">\r\n            Have an account?{' '}\r\n            <Link component={RouterLink} to=\"/login\" variant=\"h6\">\r\n              Sign in\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={(\r\n                  <Checkbox defaultChecked />\r\n                )}\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Notifications from './Notifications';\r\nimport Password from './Password';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Settings\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Notifications />\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport CustomerListView from 'src/views/customer/CustomerListView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport ProductListView from 'src/views/product/ProductListView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <AccountView /> },\r\n      { path: 'customers', element: <CustomerListView /> },\r\n      { path: 'dashboard', element: <DashboardView /> },\r\n      { path: 'products', element: <ProductListView /> },\r\n      { path: 'settings', element: <SettingsView /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      {\r\n        path: '/',\r\n        element: <LoginView /> /*  <Navigate to=\"/app/dashboard\" /> */\r\n      },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nimport { AuthProvider } from 'src/contexts/AuthContext';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {routing}\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}